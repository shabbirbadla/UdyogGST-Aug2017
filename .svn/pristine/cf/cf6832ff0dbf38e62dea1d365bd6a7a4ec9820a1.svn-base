If Exists(Select [Name] from Sysobjects where xType='P' and Id=Object_Id(N'Dynamically_Fields_Rep'))
Begin
	Drop Procedure Dynamically_Fields_Rep
End

set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
go

CREATE Procedure [dbo].[Dynamically_Fields_Rep]	
As		
	DECLARE 
	@COM_SQLSTR NVARCHAR(4000),
	@COM_SQLSTRST NVARCHAR(4000),
	@COM_SQLSTRPT NVARCHAR(4000),
	@COM_SQLSTRSR NVARCHAR(4000),
	@COM_SQLSTRPR NVARCHAR(4000),
	@SQL_STFLD NVARCHAR(4000),
	@SQL_SRFLD NVARCHAR(4000),
	@SQL_PTFLD NVARCHAR(4000),
	@SQL_PRFLD NVARCHAR(4000),
	@SQL_TMPFLD NVARCHAR(4000),
	@SQL_MultiFld Nvarchar(4000)
		
	SELECT A.E_CODE,A.FLD_NM,C.[NAME] AS [TYPE],B.MAX_LENGTH AS MAX_LENGTH,B.PRECISION AS PRECISION,
		B.SCALE AS SCALE,A.att_file,S.name AS TBLNAME INTO #TMPADDFLD
	FROM LOTHER A
		INNER JOIN SYS.COLUMNS B ON A.FLD_NM=B.[NAME] and B.OBJECT_ID=OBJECT_ID(A.E_CODE+CASE WHEN A.ATT_FILE=1 THEN 'MAIN' ELSE 'ITEM' END)
		INNER JOIN SYS.TYPES C ON B.SYSTEM_TYPE_ID=C.SYSTEM_TYPE_ID
		INNER JOIN SYS.objects S ON S.object_id=B.object_id
	WHERE A.E_CODE IN ('ST','PT','SR','PR') AND A.LSHWSALETAXFRM=1 and a.att_file=1
	ORDER BY A.FLD_NM
	
	CREATE TABLE ##Dyn_TmpTable (Entry_ty Varchar(10),TblFld VARCHAR(4000),SqlStr varchar(4000))
		
	DECLARE @FLD_NM AS VARCHAR(100),@TYPE AS VARCHAR(25),@LENTH AS INT,@PRE AS VARCHAR(10),@SCALE AS VARCHAR(10),@TBLNAME AS varchar(100)
	SET @COM_SQLSTR =''
	SET @COM_SQLSTRST =''
	SET @COM_SQLSTRPT =''
	SET @COM_SQLSTRSR =''
	SET @COM_SQLSTRPR =''
	SET @SQL_STFLD =''
	SET @SQL_SRFLD =''
	SET @SQL_PTFLD =''
	SET @SQL_PRFLD =''
	SET @SQL_MultiFld=''
	
	
	DECLARE Dynamically CURSOR FOR
		SELECT FLD_NM,MAX([TYPE]) AS [TYPE],MAX(MAX_LENGTH) AS MAX_LENGTH,MAX(PRECISION) AS PRECISION,
		MAX(SCALE) AS SCALE,TBLNAME FROM #TMPADDFLD GROUP BY FLD_NM,TBLNAME ORDER BY fld_nm
			
	OPEN Dynamically
	fetch next from Dynamically into @FLD_NM,@TYPE,@LENTH,@PRE,@SCALE,@TBLNAME
	WHILE @@FETCH_STATUS =0
		BEGIN					
			IF EXISTS(SELECT FLD_NM FROM LOTHER WHERE FLD_NM=@FLD_NM AND @TBLNAME='STMAIN' AND E_CODE='ST')
			BEGIN
				SET @COM_SQLSTRST =@COM_SQLSTRST+',M_'+@FLD_NM
				SET @SQL_STFLD = @SQL_STFLD+',M.'+@FLD_NM
			END			
									
			IF EXISTS(SELECT FLD_NM FROM LOTHER WHERE FLD_NM=@FLD_NM AND @TBLNAME='SRMAIN' AND E_CODE='SR')
			BEGIN
				SET @COM_SQLSTRSR =@COM_SQLSTRSR+',M_'+@FLD_NM
				SET @SQL_SRFLD = @SQL_SRFLD+',M.'+@FLD_NM
			END
						
			IF EXISTS(SELECT FLD_NM FROM LOTHER WHERE FLD_NM=@FLD_NM AND @TBLNAME='PTMAIN' AND E_CODE='PT')
			BEGIN
				SET @COM_SQLSTRPT =@COM_SQLSTRPT+',M_'+@FLD_NM
				SET @SQL_PTFLD = @SQL_PTFLD+',M.'+@FLD_NM
			END
			
			IF EXISTS(SELECT FLD_NM FROM LOTHER WHERE FLD_NM=@FLD_NM AND @TBLNAME='PRMAIN' AND E_CODE='PR')
			BEGIN
				SET @COM_SQLSTRPR =@COM_SQLSTRPR+',M_'+@FLD_NM
				SET @SQL_PRFLD= @SQL_PRFLD+',M.'+@FLD_NM
			END
						
			fetch next from Dynamically into @FLD_NM,@TYPE,@LENTH,@PRE,@SCALE,@TBLNAME
		END
			
		DECLARE @xFLD_NM AS VARCHAR(100),@xTYPE AS VARCHAR(25),@xLENTH AS INT,@xPRE AS VARCHAR(10),@xSCALE AS VARCHAR(10),@xATT AS BIT
		DECLARE Strtabel cursor for 
			SELECT FLD_NM,MAX([TYPE]) AS [TYPE],MAX(MAX_LENGTH) AS MAX_LENGTH,MAX(PRECISION) AS PRECISION,
			MAX(SCALE) AS SCALE,att_file FROM #TMPADDFLD GROUP BY FLD_NM,att_file ORDER BY fld_nm
			OPEN Strtabel
			FETCH NEXT FROM Strtabel INTO @xFLD_NM,@xTYPE,@xLENTH,@xPRE,@xSCALE,@xATT
			WHILE @@FETCH_STATUS =0
			BEGIN
					SELECT @COM_SQLSTR=@COM_SQLSTR +
					',CAST('+
						CASE WHEN @xTYPE='BIT' THEN '0 AS BIT' ELSE CASE WHEN @xTYPE='CHAR' THEN CHAR(39)+CHAR(39)+' AS CHAR('+RTRIM(CAST(@xLENTH AS VARCHAR))+')'
							ELSE CASE WHEN @xTYPE='DATETIME' THEN CHAR(39)+CHAR(39)+' AS DATETIME' ELSE
						CASE WHEN @xTYPE='DECIMAL' THEN '0 AS DECIMAL('+RTRIM(CAST(@xPRE AS VARCHAR))+','+RTRIM(CAST(@xSCALE AS VARCHAR))+')'
							ELSE CASE WHEN @xTYPE='INT' THEN '0 AS INT' ELSE CASE WHEN @xTYPE='NUMERIC' THEN
							'0 AS NUMERIC('+RTRIM(CAST(@xPRE AS VARCHAR))+','+RTRIM(CAST(@xSCALE AS VARCHAR))+')' ELSE
						CASE WHEN @xTYPE='SMALLDATETIME' THEN CHAR(39)+CHAR(39)+' AS SMALLDATETIME' ELSE CASE WHEN @xTYPE='TEXT' THEN
							CHAR(39)+CHAR(39)+' AS TEXT' ELSE CASE WHEN @xTYPE='VARCHAR' THEN CHAR(39)+CHAR(39)+' AS VARCHAR('+RTRIM(CAST(@xLENTH AS VARCHAR))+')'
							ELSE CHAR(39)+CHAR(39)+' AS VARCHAR('+RTRIM(CAST(@xLENTH AS VARCHAR))+')' END END END END END END END END
						END+') AS M_'+@xFLD_NM
				FETCH NEXT FROM Strtabel INTO @xFLD_NM,@xTYPE,@xLENTH,@xPRE,@xSCALE,@xATT
			END
			
			SET @SQL_TMPFLD =''
			DECLARE @AT AS BIT , @TFLD AS VARCHAR(100)
			DECLARE TMPFLDS CURSOR FOR 
			select ATT_FILE,fld_nm from LOTHER  WHERE E_CODE IN ('ST','SR','PT','PR') AND LSHWSALETAXFRM=1 group by ATT_FILE,fld_nm
			OPEN TMPFLDS
			FETCH NEXT FROM TMPFLDS INTO @AT,@TFLD
			WHILE @@FETCH_STATUS =0
				BEGIN
					IF @AT =1
					BEGIN
						set @SQL_MultiFld =@SQL_MultiFld+',M_'+@TFLD
						SET @SQL_TMPFLD =@SQL_TMPFLD +',ISNULL(M_'+@TFLD+','''') AS M_'+@TFLD
					END					
					FETCH NEXT FROM TMPFLDS INTO @AT,@TFLD
				END
			
		
	insert into ##Dyn_TmpTable VALUES ('SQSTR','',@COM_SQLSTR)
	insert into ##Dyn_TmpTable VALUES ('ST',@SQL_STFLD,@COM_SQLSTRST)
	insert into ##Dyn_TmpTable VALUES ('SR',@SQL_SRFLD,@COM_SQLSTRSR)
	insert into ##Dyn_TmpTable VALUES ('PT',@SQL_PTFLD,@COM_SQLSTRPT)
	insert into ##Dyn_TmpTable VALUES ('PR',@SQL_PRFLD,@COM_SQLSTRPR)
	insert into ##Dyn_TmpTable VALUES ('TMPFLD','',@SQL_TMPFLD)
	insert into ##Dyn_TmpTable VALUES ('MULTI','',@SQL_MultiFld)
	
CLOSE Dynamically
DEALLOCATE Dynamically			

CLOSE TMPFLDS
DEALLOCATE TMPFLDS	

CLOSE Strtabel
DEALLOCATE Strtabel

DROP TABLE #TMPADDFLD