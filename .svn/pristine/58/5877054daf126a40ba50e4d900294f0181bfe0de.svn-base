<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAAAAACoDAAAFgAAACgAAAAgAAAAQAAAAAEAGAAAAAAAgAwAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAerkAqv8Aqv8Aqv8Aqv8Aqv8Aqv8Aqv8Aqv8Aqv8Aqv8Aqv8AerkAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABrxv8AAACGhoaG
        hoaGhoaGhoaenp6enp6enp6enp6enp6enp6enp4AerkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABrxv8AaJ8AaJ8AAACqqqq2trbCwsLOzs7a2tra2tra2tra2tra
        2tra2tra2toAerkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABrxv8A
        erkAbqgAbqgAAACqqqq2trbCwsLCwsLOzs7a2tra2trm5ubm5ubm5ubm5uYAerkAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABrxv8AktwAbqgAbqgAdLEAaJ8AAAC2trbCwsLCwsLO
        zs7a2tra2trm5ubm5uby8vLy8vL///8AerkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABrxv8AktwAerkAerkAdLEAbqgAaJ8AAACqqqq2trbCwsLCwsLOzs7a2tra2trm5uby8vLy8vLy8vIA
        erkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABrxv8AktwAhssAhssAerkAdLEAbqgAaJ8A
        aJ8AAAC2trbCwsLCwsLOzs7a2tra2trm5ubm5uby8vL///////8AerkAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAABrxv8Aqv8AhssAjNQAhssAerkAdLEAdLEAbqgAaJ8AAACqqqq2trbCwsLCwsLOzs7a2tra
        2trm5uby8vL///////8AerkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABrxv8Aqv8AktwAhssAjNQA
        hssAerkAdLEAbqgAaJ8AaJ8AAAC2trbCwsLCwsLOzs7a2tra2trm5ubm5uby8vL///////8AerkAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABrxv8AktwAktwAjNQAhssAerkAdLEAdLEAbqgAaJ8AAACqqqq2
        trbCwsLCwsLOzs7a2tra2trm5uby8vLy8vL///8AerkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABr
        xv8Aqv8AktwAhssAjNQAhssAerkAdLEAbqgAaJ8AaJ8AAAC2trbCwsLCwsLOzs7a2tra2trm5ubm5uby
        8vL///////8AerkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABrxv8AktwAktwAjNQAhssAerkAerkA
        dLEAbqgAaJ8AAACqqqq2trbCwsLCwsLOzs7a2tra2trm5uby8vLy8vL///8AerkAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABrxv8Aqv8AktwAhssAjNQAhssAerkAdLEAbqgAaJ8AaJ8AAAC2tra2trbCwsLO
        zs7a2tra2trm5ubm5uby8vL///////8AerkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABrxv8AktwA
        ktwAjNQAhssAerkAerkAdLEAbqgAaJ8AAACqqqq2traenp7CwsLOzs7a2tra2trm5uby8vLy8vL///8A
        erkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABrxv8Aqv8AktwAhssAjNQAhssAerkAdLEAbqgAaJ8A
        aJ8AAAC2tra2tra5egDOzs7a2tra2trm5ubm5uby8vL///////8AerkAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAABrxv8AktwAktwAjNQAhssAerkAerkAdLEAbqgAaJ8AAACqqqq2tra5egDCwsLOzs7a2tra
        2trm5uby8vLy8vL///8AerkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACO1P8Aqv8AktwAhssAjNQA
        hssAerkAdLEAbqgAaJ8AaJ8AAADCwsK2trYAAAAAAAAAAACSkpK2trbCwsLOzs7Ozs7Ozs4AerkAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABrxv8AktwAktwAjNQAhssAerkAerkAdLEAaJ8AaJ8AAACqqqq2
        trYAAADm5ubm5uYAAACSkpKSkpKSkpK2tra2trYAerkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACO
        1P8Aqv8AktwAhssAjNQAhssAerkAdLEAbqgAaJ8AaJ8AAAC2trYAAADm5ua5egC5egAAAADOzs7Ozs6S
        kpKSkpIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABrxv8AktwAktwAjNQAhssAerkAerkA
        dLEAbqgAAAAAAAAAAAAAAAAAAAD/qiXckgC5egAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACO1P8Aqv8AktwAhssAjNQAhssAerkAgMIAAAAAAAAAAAAAAAAAAAAAAAAAAAD/
        qiXckgC5egAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABrxv8AktwA
        ktwAhssAhssAerkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/qiXckgC5egAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABrxv8Aqv8AktwAjNQAhssAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAD/qiXckgC5egAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAABrxv8AktwAhssAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/qiXc
        kgC5egAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABrxv8Aqv8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/qiXckgC5egAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD/qiUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD//////4AB//8AAf/+AAD//AAA//gAAH/wAAB/4AAAP8AAAD+AAAAfAAAAHwAA
        AA+AAAAPgAAAB8AAAAfAAAAD4AAAA+AAAAHwAAAB8AAAAPgAAAD4AAAB/AAAAfwAAAP+AHwH/gD+A/8B
        /wH/A/+A/4f/wf/P/+P////3/////w==
</value>
  </data>
</root>