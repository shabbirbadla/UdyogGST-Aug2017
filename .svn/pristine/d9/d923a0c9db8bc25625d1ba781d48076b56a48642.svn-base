/****** Object:  StoredProcedure [dbo].[USP_ENT_OpStItemAllocation]    Script Date: 06/27/2014 14:15:37 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[USP_ENT_OpStItemAllocation_pharmaind]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[USP_ENT_OpStItemAllocation_pharmaind]
GO


-- =============================================
-- Author:		Shrikant S. 
-- Create date: 27/06/2014
-- Description:	This Stored procedure is useful in Pickup OP entries from work order for Pharma/Chemical Industry.
-- Modification By : Pankaj B. on 16-03-2015 for Bug-25243(Issue in 'Input To Production' when allocating the Raw Material at Item Level)
-- =============================================
CREATE PROCEDURE [dbo].[USP_ENT_OpStItemAllocation_pharmaind] 
@ENTRY_TY  VARCHAR(2),@TRAN_CD  INT,@IT_CODE int,@SDATE SMALLDATETIME,@ProdCode varchar(10),@ISSTYP VARCHAR(10)
AS

SELECT 0 as sel,A.ENTRY_TY,A.TRAN_CD,A.DATE,A.IT_CODE,A.BATCHNO,A.MFGDT,A.EXPDT,A.ITSERIAL,B.INV_NO,B.CATE,C.IT_NAME
,ORGQTY=QTY,ADJQTY=QTY,BALQTY=QTY,QTY,REJQTY=QTY 
INTO #BALITEM
FROM STKL_VW_ITEM A
INNER JOIN STKL_VW_MAIN B ON (A.ENTRY_TY=B.ENTRY_TY AND A.TRAN_CD=B.TRAN_CD)
INNER JOIN IT_MAST C ON (A.IT_CODE=C.IT_CODE)
WHERE 1=2
DECLARE @SQLCOMMAND NVARCHAR(4000)
SET @SQLCOMMAND='INSERT INTO #BALITEM'

if rtrim(ltrim(@ProdCode))='QC'
begin
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+'SELECT 0 as sel,A.ENTRY_TY,A.TRAN_CD,A.DATE,A.IT_CODE,A.BATCHNO,A.MFGDT,A.EXPDT,A.ITSERIAL,B.INV_NO,B.CATE,C.IT_NAME'
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+',ORGQTY='+(case when @ISSTYP='REJECTED' THEN 'QCREJQTY' ELSE 'QcAceptQTY' END)+',ADJQTY=0'
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+',BALQTY='+(case when @ISSTYP='REJECTED' THEN 'QCREJQTY' ELSE 'QcAceptQTY' END)+',QTY=0,A.QCREJQTY' 
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+'FROM STKL_VW_ITEM A'
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+'INNER JOIN STKL_VW_MAIN B ON (A.ENTRY_TY=B.ENTRY_TY AND A.TRAN_CD=B.TRAN_CD)'
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+'INNER JOIN IT_MAST C ON (A.IT_CODE=C.IT_CODE)'
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+'WHERE A.PMKEY='+'''+'''+' AND C.TYPE LIKE'+CHAR(39)+'%FINISHED%'+CHAR(39)
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+'AND A.DC_NO='+''''''
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+'AND C.IT_CODE ='+cast(@IT_CODE as varchar)
SET @SQLCOMMAND =RTRIM(@SQLCOMMAND)+' '+'AND A.DATE< ='+CHAR(39)+CAST(@SDATE AS VARCHAR)+CHAR(39)
end
else
begin
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+'SELECT 0 as sel,A.ENTRY_TY,A.TRAN_CD,A.DATE,A.IT_CODE,A.BATCHNO,A.MFGDT,A.EXPDT,A.ITSERIAL,B.INV_NO,B.CATE,C.IT_NAME'
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+',ORGQTY=QTY,ADJQTY=0,BALQTY=QTY,QTY=0,0' 
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+'FROM STKL_VW_ITEM A'
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+'INNER JOIN STKL_VW_MAIN B ON (A.ENTRY_TY=B.ENTRY_TY AND A.TRAN_CD=B.TRAN_CD)'
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+'INNER JOIN IT_MAST C ON (A.IT_CODE=C.IT_CODE)'
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+'WHERE A.PMKEY='+'''+'''+' AND C.TYPE LIKE'+CHAR(39)+'%FINISHED%'+CHAR(39)
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+'AND A.DC_NO='+''''''
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+'AND C.IT_CODE ='+cast(@IT_CODE as varchar)
SET @SQLCOMMAND =RTRIM(@SQLCOMMAND)+' '+'AND A.DATE< ='+CHAR(39)+CAST(@SDATE AS VARCHAR)+CHAR(39)
end

PRINT @SQLCOMMAND
EXECUTE SP_EXECUTESQL @SQLCOMMAND

--SELECT AENTRY_TY,ATRAN_CD,AITSERIAL,AQTY=SUM(AQTY),ENTRY_TY,TRAN_CD,batchno INTO #projectitref FROM  projectitref WHERE (1=2) GROUP BY AENTRY_TY,ATRAN_CD,AITSERIAL,ENTRY_TY,TRAN_CD,batchno --Bug-25243
SELECT AENTRY_TY,ATRAN_CD,AITSERIAL,AQTY=SUM(AQTY),ENTRY_TY,TRAN_CD,batchno,ISSUETYPE=cast('' as varchar(20)) INTO #projectitref FROM  projectitref WHERE (1=2) GROUP BY AENTRY_TY,ATRAN_CD,AITSERIAL,ENTRY_TY,TRAN_CD,batchno --Bug-25243
SET @SQLCOMMAND='INSERT INTO #projectitref'
--SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+'SELECT AENTRY_TY,ATRAN_CD,AITSERIAL,AQTY=SUM(QTY),ENTRY_TY,TRAN_CD,batchno  FROM  projectitref ' --Bug-25243
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+'SELECT AENTRY_TY,ATRAN_CD,AITSERIAL,AQTY=SUM(QTY),ENTRY_TY,TRAN_CD,batchno,''''  FROM  projectitref ' --Bug-25243
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+'WHERE  NOT (ENTRY_TY ='+char(39)+@ENTRY_TY+char(39)
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+'AND TRAN_CD ='+cast(@TRAN_CD as varchar)+')'
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+'GROUP BY AENTRY_TY,ATRAN_CD,AITSERIAL,ENTRY_TY,TRAN_CD,batchno'
PRINT @SQLCOMMAND
EXECUTE SP_EXECUTESQL @SQLCOMMAND

--Bug-25243 Start
declare @entry_ty1 varchar(10)
declare  #ipcur cursor for select entry_ty,tran_cd from projectitref
open #ipcur
fetch next from #ipcur into @entry_ty,@tran_cd
while @@fetch_status=0
begin
set @entry_ty1=@entry_ty+'MAIN'
	if exists(select * from sys.columns where Name = N'ISSUETYPE' and Object_ID = Object_ID(@entry_ty1))
	BEGIN
		EXECUTE('UPDATE #projectitref SET ISSUETYPE=(SELECT ISSUETYPE FROM '+@ENTRY_TY1+' WHERE ENTRY_TY='''+@ENTRY_TY+''' AND TRAN_CD='+@TRAN_CD+')WHERE ENTRY_TY='''+@ENTRY_TY+''' AND TRAN_CD='+@TRAN_CD+'')
	END
fetch next from #ipcur into @entry_ty,@tran_cd	
end
CLOSE #ipcur
DEALLOCATE #ipcur
--Bug-25243 End

UPDATE A SET  A.ADJQTY=ISNULL(B.AQTY,0),A.BALQTY=A.ORGQTY-ISNULL(B.AQTY,0) FROM #BALITEM A 
INNER JOIN #projectitref B ON (A.ENTRY_TY=B.AENTRY_TY AND A.TRAN_CD=B.ATRAN_CD AND A.ITSERIAL=B.AITSERIAL)
	--INNER JOIN STMAIN ON (B.ENTRY_TY=STMAIN.ENTRY_TY AND B.TRAN_CD=STMAIN.Tran_cd) --Bug-25243
	--WHERE STMAIN.ISSUETYPE=@ISSTYP --Bug-25243
WHERE B.ISSUETYPE=@ISSTYP	---Bug-25243

delete from #BALITEM where BALQTY=0

SELECT * FROM #BALITEM




--UPDATE A SET A.AQTY=A.AQTY-ISNULL((SELECT SUM(B.QTY) FROM projectitref B  WHERE B.ENTRY_TY=@ENTRY_TY AND B.BATCHNO  IN (SELECT C.BATCHNO FROM STMAIN C WHERE RTRIM(C.ISSUETYPE)='REJECTED' GROUP BY C.BATCHNO)  ),0)  FROM  #projectitref A -- Added by Pankaj B. on 12-06-2014 for chemical

--if RTRIM(@ISSTYP)='REJECTED'
--BEGIN
--UPDATE A SET A.ADJQTY=ISNULL((SELECT SUM(B.QTY) 
--FROM STITEM B 
--INNER JOIN STMAIN C ON (B.TRAN_CD=C.TRAN_CD)
--WHERE RTRIM(C.ISSUETYPE)='REJECTED' GROUP BY B.BATCHNO,B.IT_CODE),0)
--FROM #BALITEM A

--UPDATE #BALITEM SET ORGQTY=REJQTY
--UPDATE #BALITEM SET BALQTY=(ORGQTY-ADJQTY)
--END
--ELSE
--BEGIN
--UPDATE A SET  A.ADJQTY=ISNULL(B.AQTY,0),A.BALQTY=(A.ORGQTY-ISNULL(B.AQTY,0)) 
--	FROM #BALITEM A INNER JOIN #projectitref B ON (A.ENTRY_TY=B.AENTRY_TY AND A.TRAN_CD=B.ATRAN_CD AND A.ITSERIAL=B.AITSERIAL ) 
--UPDATE A SET  a.rejqty=0 FROM #BALITEM A 
--END

--SELECT * FROM #BALITEM












GO


