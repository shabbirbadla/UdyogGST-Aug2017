If Exists(Select [Name] from Sysobjects where xType='P' and Id=Object_Id(N'USP_REP_STKVAL'))
Begin
	Drop Procedure USP_REP_STKVAL
End

set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
go

-- =============================================
-- Author:		Ruepesh Prajapati.
-- Create date: 16/05/2007
-- Description:	This Stored procedure is useful to generate INVENTORY STOCK VALUATION Report.
-- Modify date,By:,Reason: 12/12/2009,Rupesh Prajapati,To Delete Nill Balance enries. /*Rup 29/12/2009*/ 
-- Modify date,By:,Reason: 29/12/2009,Rupesh Prajapati Changes done for Query L2S-23/*Rup 29/12/2009*/ 
-- Modify date,By:,Reason: 08/02/2010,Rupesh Prajapati Changes done for Query L2S-23 by QC for AVG/*Rup 08/02/2010*/ 
-- Modify date,By:,Reason: 03/04/2010,Shrikant S., For TKT-863 
-- Modify date,By:,Reason: 25/03/2010, AQTY formula With AQTY Dinesh TKT-806
-- Modify date,By:,Reason: 05/04/2010 Rupesh TKT-806,and PowerTech client SR Frate problem for Same Day PT,SR and Sales*/
-- Modify date,By:,Reason: 06/04/2010,Shrikant S., For TKT-863 
-- Modify date,By:,Reason: 20/07/2011,Vasant M. S. for TKT-8494 (Trading + Accounting)
-- Modify date,By:,Reason: 03/05/2012,Shrikant S. for Bug-3900 Warehouse wise valuation
-- Modify by vasant on 05/05/2012 as per Bug 3450 (Balance sheet report Problem).
-- Modify by vasant on 27/06/2012 as per Bug 3450A (Balance sheet report Problem).
-- Modify date,By:,Reason: 20/11/2012,Shrikant S. for Bug-7312 Sales amount is not reflecting in report
-- Modify date,By:,Reason: 21/11/2012,Shrikant S. for Bug-7209 Changed the size of rate columns and variables
-- Modify date,By:,Reason: 31/12/2012 , sandeep for bug-1724 
-- Modify by vasant on 23/01/2013 as per Bug 8025 (stock valuation report problem). - Bug8025
-- Modify date,By:,Reason: 21/02/2013,Shrikant S. for Bug-9009
-- Modify by vasant on 18/06/2013 as per Bug 5445 (Problem in Stock Valuation Report). - Bug5445
-- Remark:
-- Modified by vasant on 25/11/2013 as per Bug 20309 (Require Bifurcation of 'General Opening & Closing Stock' and 'Consignment Opening & Closing Stock' in Final and Stock Valuation Reports). Comment Remark = --Bug20309
-- Modify by vasant on 12/02/2014 as per Bug 21535 - (Issue in Stock Valuation). - Bug21535
-- Modify by Pankaj M. Borse on 07/04/2014 for Bug 22534 - (Required Stock Valuation without warehouse in default Software). - Bug22534
-- Modify by Pankaj M. Borse on 24/06/2014 for Bug 23326 - (STOCK VALUATION REPORT PROBLEM)
--Modify By Kishor A. for Bug-26836 on 04/09/2015
--Modify By Ruchit S. for Bug-28346 on 25/06/2016
-- =============================================
Create PROCEDURE [dbo].[USP_REP_STKVAL]
@TMPAC NVARCHAR(50),@TMPIT NVARCHAR(50),@SPLCOND VARCHAR(8000),@SDATE  SMALLDATETIME,@EDATE SMALLDATETIME
,@SAC AS VARCHAR(60),@EAC AS VARCHAR(60)
,@SIT AS VARCHAR(60),@EIT AS VARCHAR(60)
,@SAMT FLOAT,@EAMT FLOAT
,@SDEPT AS VARCHAR(60),@EDEPT AS VARCHAR(60)
,@SCATE AS VARCHAR(60),@ECATE AS VARCHAR(60)
,@SWARE AS VARCHAR(60),@EWARE AS VARCHAR(60)
,@SINV_SR AS VARCHAR(60),@EINV_SR AS VARCHAR(60)
,@LYN VARCHAR(20)
,@EXPARA  AS VARCHAR(4000) --= null	--Bug20309
AS
--DECLARE @VALMETHOD AS VARCHAR(20)	--Bug20309
DECLARE @FCON AS NVARCHAR(2000),@VSAMT DECIMAL(14,4),@VEAMT DECIMAL(14,4)

--SET @VALMETHOD=CASE WHEN (@EXPARA LIKE '%FIFO%') THEN 'FIFO' ELSE (CASE WHEN (@EXPARA LIKE '%LIFO%') THEN 'LIFO' ELSE 'AVG'  END) END	--Bug20309
select top 1 sta_dt into #TempSta_dt from vudyog..co_mast where dbname = db_name() and sta_dt <=@sdate order by sta_dt desc			--Changes done by vasant on 05/05/2012 as per Bug 3450 (Balance sheet report Problem).
--Bug5445
Declare @ExclDutyforDealer Bit	
set @ExclDutyforDealer = 0	
select top 1 @ExclDutyforDealer = ExclDutyforDealer from Manufact	
--Bug5445
EXECUTE   USP_REP_FILTCON 
@VTMPAC =@TMPAC,@VTMPIT =@TMPIT,@VSPLCOND =@SPLCOND
,@VSDATE=NULL
,@VEDATE=@EDATE --changed from NULL to @EDATE for BUG-28346 by Ruchit Shah on 25/06/2016
,@VSAC =@SAC,@VEAC =@EAC
,@VSIT=@SIT,@VEIT=@EIT
,@VSAMT=@SAMT,@VEAMT=@EAMT
,@VSDEPT=@SDEPT,@VEDEPT=@EDEPT
,@VSCATE =@SCATE,@VECATE =@ECATE
,@VSWARE =@SWARE,@VEWARE  =@EWARE
,@VSINV_SR =@SINV_SR,@VEINV_SR =@SINV_SR
,@VMAINFILE='M',@VITFILE='I',@VACFILE=' '
,@VDTFLD ='DATE'
,@VLYN=Null
,@VEXPARA=null
,@VFCON =@FCON OUTPUT

--Bug20309
Declare @SQLCOMMAND AS NVARCHAR(4000),@ShowNil Varchar(100),@FldNmLst Varchar(4000),@FldValLst Varchar(4000),@CondCount Int
Set @ShowNil = case when @EXPARA like '%YES%' then 'YES' else 'NO' end

Select RecId = IDENTITY(int, 1,1),VStkCond = Cast(' ' as varchar(4000)),* 
	into ##STKVALConfig from StkValConfig

SELECT RecId=Cast(0 as int),
	RawId=Cast(0 as int),
	condition=Cast(' ' as nvarchar(max)),
	descrip=Cast(' ' as nvarchar(max)),
	tbl_name=Cast(' ' as nvarchar(max))
	Into #StkValConfig1 FROM ##StkValConfig where 1 = 2

--SET ANSI_PADDING, ANSI_WARNINGS, CONCAT_NULL_YIELDS_NULL, ARITHABORT On
SET ARITHABORT On
Set @CondCount = 1
WHILE 1 = 1
BEGIN
	Set @SQLCOMMAND	= 'Insert into #StkValConfig1
		SELECT RecId,'+cast(@CondCount as varchar(5))+',
		vcond.value(''(//tmpvcond/condition)['+cast(@CondCount as varchar(5))+']'', ''nvarchar(max)'') as condition,
		vcond.value(''(//tmpvcond/descrip)['+cast(@CondCount as varchar(5))+']'', ''nvarchar(max)'') as descrip,
		vcond.value(''(//tmpvcond/tbl_name)['+cast(@CondCount as varchar(5))+']'', ''nvarchar(max)'') as tbl_name
		FROM ##StkValConfig'
	EXEC SP_EXECUTESQL  @SQLCOMMAND	
		
	IF Not Exists(Select * from #StkValConfig1 where RawId = @CondCount And condition Is Not Null)
		BREAK
	ELSE
		Set @CondCount = @CondCount + 1
		CONTINUE
END

Update #StkValConfig1 Set condition = ISNULL(condition,''),descrip = ISNULL(descrip,''),tbl_name = ISNULL(tbl_name,'')
Delete from #StkValConfig1 Where condition = '' and descrip = '' and tbl_name = ''
Update #StkValConfig1 Set tbl_name = (case when tbl_name = 'STKL_VW_MAIN' then 'M' else (case when tbl_name = 'STKL_VW_ITEM' then 'I' else tbl_name end) end)

Set @FldNmLst = '[RULE],[INV_NO],[ENTRY_TY],[PMKEY],[IT_NAME],[WARE_NM],[ITSERIAL],[DC_NO]'
Set @FldValLst = 'M.[RULE],M.[INV_NO],M.[ENTRY_TY],I.[PMKEY],IT_MAST.[IT_NAME],I.[WARE_NM],I.[ITSERIAL],[DC_NO]'

Declare @recid int,@condition Varchar(100),@descrip Varchar(4000),@tbl_name Varchar(100),@stkvcond Varchar(4000)
DECLARE C0STKVAL CURSOR FOR 
SELECT RecId FROM #StkValConfig1 Group BY RecId
OPEN C0STKVAL
FETCH NEXT FROM C0STKVAL INTO @recid
WHILE @@FETCH_STATUS=0
	BEGIN
	Set @stkvcond = ''

	DECLARE C01STKVAL CURSOR FOR 
	SELECT Condition,Descrip,Tbl_Name FROM #StkValConfig1 Where RecId = @recid
	ORDER BY RecId,Tbl_Name,Condition
	OPEN C01STKVAL
	FETCH NEXT FROM C01STKVAL INTO @Condition,@Descrip,@Tbl_Name
	WHILE @@FETCH_STATUS=0
	BEGIN
			
		IF replace(replace(@FldValLst,'[','+'),']','+') not like '%'+'+'+LTRIM(RTRIM(@Condition))+'+'+'%'
		Begin
			Set @FldNmLst = @FldNmLst + ','+'['+LTRIM(RTRIM(@Condition))+']'
			Set @FldValLst = @FldValLst + ','+LTRIM(RTRIM(@Tbl_Name))+'.['+LTRIM(RTRIM(@Condition))+']'
		End

		if replace(replace(@stkvcond,'[','+'),']','+') like '%'+'+'+LTRIM(RTRIM(@Condition))+'+'+'%'
		Begin
			Set @stkvcond = @stkvcond + ' Or '
		End	
		if replace(replace(@stkvcond,'[','+'),']','+') not like '%'+'+'+LTRIM(RTRIM(@Condition))+'+'+'%'
		Begin
			if @stkvcond <> ''
			Begin
				Set @stkvcond = @stkvcond + ' ) And '
			End	
			Set @stkvcond = @stkvcond + ' ( '
		End	
		Set @stkvcond = @stkvcond + '['+LTRIM(RTRIM(@Condition))+']' 
		Set @stkvcond = @stkvcond + ' = '''+@Descrip+''''
		
		FETCH NEXT FROM C01STKVAL INTO @Condition,@Descrip,@Tbl_Name
	END
	CLOSE C01STKVAL
	DEALLOCATE C01STKVAL

	if @stkvcond <> ''
	Begin
		Set @stkvcond = @stkvcond + ' )'
	End	
	Set @stkvcond = REPLACE(@stkvcond,'''','''''')
	SET @SQLCOMMAND=' '
	SET @SQLCOMMAND=' Update ##STKVALConfig Set VStkCond = '''+@stkvcond+''' Where RecId = '+cast(@RecId as varchar(5))
	print @SQLCOMMAND
	EXEC SP_EXECUTESQL  @SQLCOMMAND

	FETCH NEXT FROM C0STKVAL INTO @recid
END
CLOSE C0STKVAL
DEALLOCATE C0STKVAL

Drop Table #StkValConfig1

SET @SQLCOMMAND=' '
SET @SQLCOMMAND='SELECT IT_CODE,IT_NAME=ITEM,OPBAL=QTY,OPAMT=GRO_AMT,RQTY=QTY,RAMT=GRO_AMT,IQTY=QTY,IAMT=GRO_AMT,CLBAL=QTY,CLAMT=GRO_AMT,Ware_Nm,DC_NO,Status=Ware_Nm,VNAME=SPACE(100) INTO ##STKVAL FROM STITEM WHERE 1=2'
EXEC SP_EXECUTESQL  @SQLCOMMAND
	
SET @SQLCOMMAND=' '
SET @SQLCOMMAND='SELECT M.DATE,TRAN_CD=0,I.IT_CODE,I.QTY,RATE=convert(Numeric(22,6),I.RATE),I.GRO_AMT,IT_MAST.RATEPER,MGRO_AMT=M.GRO_AMT,M.NET_AMT,FRATE=convert(Numeric(22,6),I.RATE),PMV=M.NET_AMT'
SET @SQLCOMMAND=@SQLCOMMAND + ',PMI=M.NET_AMT,TOTPMV=M.NET_AMT,BHENT=SPACE(2),PMKEY1=3'
SET @SQLCOMMAND=@SQLCOMMAND + ','+@FldValLst+',VName=space(100),VType=space(20)'
SET @SQLCOMMAND=@SQLCOMMAND + ' INTO ##STKVAL1 FROM STITEM I INNER JOIN STMAIN M ON(M.tran_cd=I.tran_cd)'
SET @SQLCOMMAND=@SQLCOMMAND + ' INNER JOIN IT_MAST ON(I.IT_CODE=IT_MAST.IT_CODE) WHERE 1=2'
EXEC SP_EXECUTESQL  @SQLCOMMAND

--SELECT IT_CODE,IT_NAME=ITEM,OPBAL=QTY,OPAMT=GRO_AMT,RQTY=QTY,RAMT=GRO_AMT,IQTY=QTY,IAMT=GRO_AMT,CLBAL=QTY,CLAMT=GRO_AMT,Ware_Nm,DC_NO,Status=Ware_Nm INTO ##STKVAL FROM STITEM WHERE 1=2		--Added By Shrikant S. on 03/05/2012 for Bug-3900-->Added dc_no column by sandeep for bug-1724 on 05/06/12		--Bug8025
--SELECT IT_CODE,IT_NAME=ITEM,OPBAL=QTY,OPAMT=GRO_AMT,RQTY=QTY,RAMT=GRO_AMT,IQTY=QTY,IAMT=GRO_AMT,CLBAL=QTY,CLAMT=GRO_AMT INTO ##STKVAL FROM STITEM WHERE 1=2	--Commented By Shrikant S. on 03/05/2012 for Bug-3900	
--Bug20309


----->Generate #l Table from LCODE with Behaviour
SELECT DISTINCT ENTRY_TY,(CASE WHEN EXT_VOU=1 THEN BCODE_NM ELSE ENTRY_TY END) AS BHENT,PMKEY=INV_STK  INTO #L FROM LCODE WHERE (V_ITEM<>0 ) AND INV_STK<>' '  ORDER BY BHENT
---<--Generate #l Table from LCODE with Behaviour
----->Tax/Discount & Charges for applied Date. 
SELECT  DISTINCT A.ENTRY_TY,A.FLD_NM,A.ATT_FILE,A_S=(CASE WHEN (A.CODE='D' OR A.CODE='F') THEN '-' ELSE '+' END),A.STKVAL,A.WEFSTKFROM,A.WEFSTKTO,TAX_NAME=SPACE(20),L.BHENT
INTO #TAX
FROM DCMAST A INNER JOIN #L L ON (A.ENTRY_TY=L.ENTRY_TY) WHERE A.STKVAL<>0
UNION
--SELECT DISTINCT ENTRY_TY=SPACE(2),FLD_NM='TAXAMT   ',ATT_FILE=1,A_S='+',STKVAL,WEFSTKFROM,WEFSTKTO,TAX_NAME,BHENT='~~'  --&& Commented by Shrikant S. on 03/04/2010 for TKT-863
SELECT DISTINCT ENTRY_TY,FLD_NM='TAXAMT   ',ATT_FILE=1,A_S='+',STKVAL,WEFSTKFROM,WEFSTKTO,TAX_NAME,BHENT=ENTRY_TY  --&& Added by Shrikant S. on 03/04/2010 for TKT-863
FROM STAX_MAS  
WHERE STKVAL<>0
---<--Tax/Discount & Charges for applied Date. 
--Bug5445
SELECT  DISTINCT A.ENTRY_TY,A.FLD_NM,A.ATT_FILE,A_S='-',A.STKVAL,A.WEFSTKFROM,A.WEFSTKTO,TAX_NAME=SPACE(20),L.BHENT
INTO #TAXEXCL
FROM DCMAST A INNER JOIN #L L ON (A.ENTRY_TY=L.ENTRY_TY) WHERE A.STKVAL=0 And A.Code = 'E' And @ExclDutyforDealer = 1
--Bug5445
----->Create Temporary Table to Calculate rate with Taxes & Charges [##STKVAL1]
--SELECT M.DATE,TRAN_CD=0,M.INV_NO,M.ENTRY_TY,I.PMKEY,I.IT_CODE,I.QTY,I.RATE,I.GRO_AMT,IT.IT_NAME,IT.RATEPER,MGRO_AMT=M.GRO_AMT,M.NET_AMT,I.WARE_NM,FRATE=I.RATE,PMV=M.NET_AMT			--Commented By Shrikant S. on 21/11/2012 for Bug-7209
--Bug20309
/*
SELECT M.DATE,TRAN_CD=0,M.INV_NO,M.ENTRY_TY,I.PMKEY,I.IT_CODE,I.QTY,RATE=convert(Numeric(22,6),I.RATE),I.GRO_AMT,IT.IT_NAME,IT.RATEPER,MGRO_AMT=M.GRO_AMT,M.NET_AMT,I.WARE_NM,FRATE=convert(Numeric(22,6),I.RATE),PMV=M.NET_AMT		--Added By Shrikant S. on 21/11/2012 for Bug-7209
,PMI=M.NET_AMT,TOTPMV=M.NET_AMT,M.[RULE]		--M.[RULE] Added by Vasant on 20/07/2011 for TKT-8494
,BHENT=SPACE(2),I.ITSERIAL,PMKEY1=3,DC_NO
INTO ##STKVAL1
FROM STITEM I INNER JOIN 
STMAIN M ON(M.tran_cd=I.tran_cd) 
INNER JOIN IT_MAST IT ON(I.IT_CODE=IT.IT_CODE)
WHERE 1=2
*/
--Bug20309
---<--Create Temporary Table to Calculate rate with Taxes & Charges [##STKVAL1]
----->Insert Records into ##STKVAL1 from all Item Tables
DECLARE @ENTRY_TY AS VARCHAR(2),@TRAN_CD INT,@BHENT AS VARCHAR(2),@ITSERIAL VARCHAR(10),@DATE SMALLDATETIME,@QTY NUMERIC(15,3),@AQTY NUMERIC(15,3),@AQTY1 NUMERIC(15,3),@IBALQTY1 NUMERIC(15,3),@QTY1 NUMERIC(15,3),@PMKEY VARCHAR(1)
DECLARE @ENTRY_TY1 AS VARCHAR(2),@TRAN_CD1 INT,@ITSERIAL1 VARCHAR(10),@WARE_NM1 VARCHAR(100),@DATE1 SMALLDATETIME,@IT_CODE1 INT,@DC_NO VARCHAR(10), @DC_NO1 VARCHAR(10),@VNAME1 VARCHAR(100)	--Bug20309
--DECLARE @RATE NUMERIC(12,2),@RATE1 NUMERIC(12,2),@FRATE NUMERIC(12,2),@LRATE NUMERIC(12,2),@IT_CODE INT,@MIT_CODE INT,@IT_NAME VARCHAR(100),@WARE_NM VARCHAR(100),@MWARE_NM VARCHAR(100)			--Commented By Shrikant S. on 21/11/2012 for Bug-7209
DECLARE @RATE NUMERIC(22,6),@RATE1 NUMERIC(22,6),@FRATE NUMERIC(22,6),@LRATE NUMERIC(22,6),@IT_CODE INT,@MIT_CODE INT,@IT_NAME VARCHAR(100),@WARE_NM VARCHAR(100),@MWARE_NM VARCHAR(100),@MVNAME VARCHAR(100)			--Added By Shrikant S. on 21/11/2012 for Bug-7209	 --Bug20309

--DECLARE @SQLCOMMAND AS NVARCHAR(4000)	--Bug20309


DECLARE  C1STKVAL CURSOR FOR 
SELECT  DISTINCT BHENT,PMKEY FROM #L
ORDER BY BHENT
OPEN C1STKVAL
FETCH NEXT FROM C1STKVAL INTO @BHENT,@PMKEY
WHILE @@FETCH_STATUS=0
BEGIN
	SET @SQLCOMMAND=' '
	SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+'INSERT INTO ##STKVAL1 ('
	--Bug20309
	SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+'DATE,TRAN_CD,IT_CODE,QTY,RATE,GRO_AMT,RATEPER,MGRO_AMT,NET_AMT,FRATE,PMV,PMI,TOTPMV'
	SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+',BHENT,PMKEY1,'+@FldNmLst
	--SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+'DATE,TRAN_CD,INV_NO,ENTRY_TY,PMKEY,IT_CODE,QTY,RATE,GRO_AMT,IT_NAME,RATEPER,MGRO_AMT,NET_AMT,WARE_NM,FRATE,PMV'
	--SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+',PMI,TOTPMV,[RULE]'				--[RULE] Added by Vasant on 20/07/2011 for TKT-8494
	--SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+',BHENT,I.ITSERIAL,PMKEY1,DC_NO'
	--Bug20309
	SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+')'
	--Bug20309
--	SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+'SELECT M.DATE,M.TRAN_CD,M.INV_NO,M.ENTRY_TY,I.PMKEY,I.IT_CODE,I.QTY,I.RATE,I.GRO_AMT,IT_MAST.IT_NAME,IT_MAST.RATEPER,MGRO_AMT=M.GRO_AMT,M.NET_AMT,I.WARE_NM,FRATE=0,PMV=0'
--	SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+',PMI=0,TOTPMV=0,M.[RULE]'			--M.[RULE] Added by Vasant on 20/07/2011 for TKT-8494
--	SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+',L.BHENT,I.ITSERIAL,PMKEY1=(CASE WHEN I.PMKEY='+CHAR(39)+'+'+CHAR(39)+' THEN 1 ELSE 0 END)'--,RTRAN_CD=(CASE WHEN ITR.TRAN_CD IS NULL THEN 0 ELSE ITR.TRAN_CD END) ,RENTRY_TY=ITR.ENTRY_TY,RBHENT=SPACE(2),RQTY=ITR.RQTY,RITSERIAL=ITR.ITSERIAL'
--	SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+',DC_NO FROM '+@BHENT+'ITEM I INNER JOIN '
	SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+'SELECT M.DATE,M.TRAN_CD,I.IT_CODE,I.QTY,I.RATE,I.GRO_AMT,IT_MAST.RATEPER,MGRO_AMT=M.GRO_AMT,M.NET_AMT,FRATE=0,PMV=0,PMI=0,TOTPMV=0'
	SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+',L.BHENT,PMKEY1=(CASE WHEN I.PMKEY='+CHAR(39)+'+'+CHAR(39)+' THEN 1 ELSE 0 END),'+@FldValLst	
	SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+' FROM '+@BHENT+'ITEM I INNER JOIN '
	--Bug20309
	SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+@BHENT+'MAIN M ON(M.tran_cd=I.tran_cd) '
	SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+'INNER JOIN IT_MAST  ON(I.IT_CODE=IT_MAST.IT_CODE)'
	SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+' AND IT_MAST.IN_STKVAL=1'
	SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+'INNER JOIN #L L ON (M.ENTRY_TY=L.ENTRY_TY)'

	SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+RTRIM(@FCON)
	--	SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+' AND I.PMKEY<>'+''' ''' Commented By Kishor A. for Bug-26836 on 04/09/2015
	SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+' AND M.APGEN=''YES'' AND I.PMKEY<>'+''' ''' --Added By Kishor A. for Bug-26836	04/09/2015
	--IF @PMKEY='-'		--Changes done by vasant on 05/05/2012 as per Bug 3450 (Balance sheet report Problem).
	--BEGIN
		--SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+' AND M.DATE<='+CHAR(39)+CAST(@EDATE AS VARCHAR)+CHAR(39)	Bug 3450A
	--END
	PRINT @SQLCOMMAND
	EXEC SP_EXECUTESQL  @SQLCOMMAND
		
	FETCH NEXT FROM C1STKVAL INTO @BHENT,@PMKEY
END
CLOSE C1STKVAL
DEALLOCATE C1STKVAL

--Bug20309
Update ##STKVAL1 Set VName = ISNULL(VName,''),VType = ISNULL(VType,'')
Declare @VName Varchar(100),@VType Varchar(20),@VCond Varchar(4000)
DECLARE C4STKVAL CURSOR FOR 
SELECT  VName,VType,VStkCond FROM ##STKVALConfig
ORDER BY VName
OPEN C4STKVAL
FETCH NEXT FROM C4STKVAL INTO @VName,@VType,@VCond
WHILE @@FETCH_STATUS=0
BEGIN
	If @VCond = ''
	begin
		set @VCond = 'IsNull(VName,'' '') = '' '''
	end
	SET @SQLCOMMAND=' '
	SET @SQLCOMMAND=' Update ##STKVAL1 Set VName = '''+@VName+''',VType = '''+@VType+''' Where '+@VCond
	EXEC SP_EXECUTESQL  @SQLCOMMAND
		
	FETCH NEXT FROM C4STKVAL INTO @VName,@VType,@VCond
END
CLOSE C4STKVAL
DEALLOCATE C4STKVAL
--Bug20309

SELECT *,ASSEAMT=QTY * RATE INTO #RECEIPT FROM ##STKVAL1 WHERE PMKEY1=1 --	Bug 3450A
DELETE FROM ##STKVAL1 WHERE DATE>@EDATE		 --	Bug 3450A

--Added by Vasant on 20/07/2011 for TKT-8494   -- start
Update ##STKVAL1 set [Rule] = 'EXCISE' where [Rule] in ('EXCISE','NON-EXCISE')
Update ##STKVAL1 set [Rule] = 'OTHERS' where [Rule] NOT in ('EXCISE')
SET @SQLCOMMAND=' '
SET @SQLCOMMAND = 'DECLARE @OPTRAN_CD as INT,@OPDATE as DATETIME,@OPIT_CODE as INT,@OPRULE as VARCHAR(10),@OPVNAME as VARCHAR(100)		--Bug20309  
	DECLARE openingentry_cursor CURSOR FOR
	SELECT A.TRAN_CD, B.STA_DT,A.IT_CODE,A.[RULE],A.VNAME FROM ##STKVAL1 A,#TempSta_dt B WHERE A.BHENT IN (''OS'') 		--Changes done by vasant on 05/05/2012 as per Bug 3450 (Balance sheet report Problem).	--Bug20309
	OPEN openingentry_cursor
	FETCH NEXT FROM openingentry_cursor into @OPTRAN_CD,@OPDATE,@OPIT_CODE,@OPRULE,@OPVNAME		--Bug20309
	WHILE @@FETCH_STATUS = 0
	BEGIN
	   DELETE FROM ##STKVAL1 WHERE DATE < @OPDATE AND [RULE] = @OPRULE AND VNAME	= @OPVNAME	--Bug20309
		AND IT_CODE IN (SELECT IT_CODE FROM ##STKVAL1 WHERE IT_CODE = @OPIT_CODE AND [RULE] = @OPRULE AND VNAME	= @OPVNAME AND BHENT IN (''OS'')  And DATE = @OPDATE)		--Changes done by vasant on 05/05/2012 as per Bug 3450 (Balance sheet report Problem).	--Bug20309
	   FETCH NEXT FROM openingentry_cursor into @OPTRAN_CD,@OPDATE,@OPIT_CODE,@OPRULE,@OPVNAME		--Bug20309
	END
CLOSE openingentry_cursor
DEALLOCATE openingentry_cursor'
EXECUTE SP_EXECUTESQL @SQLCOMMAND
--Added by Vasant on 20/07/2011 for TKT-8494  -- end

--	   DELETE FROM ##STKVAL1 WHERE BHENT IN (''OS'') AND TRAN_CD = @OPTRAN_CD AND [RULE] = @OPRULE
--			AND IT_CODE IN (SELECT IT_CODE FROM ##STKVAL1 WHERE IT_CODE = @OPIT_CODE AND [RULE] = @OPRULE AND DATE < @OPDATE )

--SELECT * INTO #RECEIPT FROM ##STKVAL1 WHERE PMKEY1=1 --+ Commented by Shrikant S. on 06 Apr, 2010 for TKT-863
--SELECT *,ASSEAMT=QTY * RATE INTO #RECEIPT FROM ##STKVAL1 WHERE PMKEY1=1 --+ Added by Shrikant S. on 06 Apr, 2010 for TKT-863	Bug 3450A

--DELETE FROM ##STKVAL1 WHERE DATE>@EDATE		--Changes done by vasant on 05/05/2012 as per Bug 3450 (Balance sheet report Problem).
--DELETE FROM ##STKVAL1 WHERE ((PMKEY1=0 AND LEN(RTRIM(DC_NO))>0))
DELETE FROM ##STKVAL1 WHERE ((PMKEY1=0 AND LEN(RTRIM(DC_NO))>=2)) --&& Added by sandeep for bug-1724	--Bug21535
--DELETE FROM ##STKVAL1 WHERE (((PMKEY1=0 AND LEN(RTRIM(DC_NO))>0)) OR DATE>@EDATE)
---<--Insert Records into ##STKVAL1 from all Item Tables
----->Update PMI=Total Item wise plus/minus amount from dcmast,stax_mas,TOTPMV=Total Voucher wise plus/minus amount from dcmast,stax_mas into ##STKVAL1 from all Item Tables
DECLARE @TENTRY_TY AS VARCHAR(2),@FLD_NM AS VARCHAR(20),@ATT_FILE AS INT,@A_S AS VARCHAR(1),@WEFSTKFROM AS SMALLDATETIME,@WEFSTKTO AS SMALLDATETIME,@TBHENT AS VARCHAR(2),@TAX_NAME AS VARCHAR(30)
DECLARE @PARMDEFINATION NVARCHAR(50),@AMT AS NUMERIC(12,2)
UPDATE #RECEIPT SET PMI=0

SELECT ENTRY_TY,TRAN_CD=0,ITSERIAL,AMT=GRO_AMT INTO #ITEM1 FROM STITEM  WHERE 1=2

Declare @MainTable Varchar(50),@IncExciseCol Bit,@codeType Varchar(2)		--Added By Shrikant S. on 21/02/2013 for Bug-9009

set @MainTable=''									--Added By Shrikant S. on 21/02/2013 for Bug-9009
set @IncExciseCol=0									--Added By Shrikant S. on 21/02/2013 for Bug-9009

DECLARE  C2STKVAL CURSOR FOR 
SELECT  DISTINCT ENTRY_TY,BHENT FROM #RECEIPT WHERE PMKEY='+'
OPEN C2STKVAL
FETCH NEXT FROM C2STKVAL INTO @ENTRY_TY,@BHENT
WHILE @@FETCH_STATUS=0
BEGIN
	--Added By Shrikant S. on 21/02/2013 for Bug-9009		--Start
	set @MainTable=Case when @BHENT<>'' then @BHENT else @ENTRY_TY End+'Main'		
	if Exists(Select c.[Name] From Syscolumns c Inner Join Sysobjects b on (b.id=c.id) Where b.[Name]=@MainTable and c.[name]='IncExcise')
	Begin
		set @IncExciseCol=1
	end
	--Added By Shrikant S. on 21/02/2013 for Bug-9009		--End

	DECLARE  C3STKVAL CURSOR FOR 
	SELECT FLD_NM,ATT_FILE,A_S,WEFSTKFROM,WEFSTKTO,BHENT,TAX_NAME FROM #TAX WHERE (ENTRY_TY=@ENTRY_TY) OR (BHENT='~~')
	OPEN C3STKVAL
	FETCH NEXT FROM  C3STKVAL INTO @FLD_NM,@ATT_FILE,@A_S,@WEFSTKFROM,@WEFSTKTO,@TBHENT,@TAX_NAME
	WHILE @@FETCH_STATUS=0
	BEGIN
		set @codeType=''	--Added By Shrikant S. on 21/02/2013 for Bug-9009
		IF @ATT_FILE='0'
		BEGIN
		    DELETE FROM #ITEM1
		    Select Top 1 @codeType=Code From Dcmast Where Entry_ty=@ENTRY_TY and fld_nm=@FLD_NM		--Added By Shrikant S. on 21/02/2013 for Bug-9009
			SET @SQLCOMMAND='INSERT INTO #ITEM1  (ENTRY_TY,TRAN_CD,ITSERIAL,AMT)'
			--SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+'SELECT ENTRY_TY,TRAN_CD,ITSERIAL,(CASE WHEN '+RTRIM(@FLD_NM)+' IS NULL THEN 0 ELSE '+RTRIM(@FLD_NM)+' END)  FROM '+@BHENT+'ITEM WHERE DATE BETWEEN '+CHAR(39)+CAST(@WEFSTKFROM AS VARCHAR)+CHAR(39)+ ' AND '+CHAR(39)+CAST(@WEFSTKTO AS VARCHAR)+CHAR(39) +' AND ENTRY_TY='+CHAR(39)+@ENTRY_TY+CHAR(39)  --Commented by Shrikant S. on 03 Apr, 2010 For TKT-863
			--SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+'SELECT A.ENTRY_TY,A.TRAN_CD,A.ITSERIAL,(CASE WHEN '+RTRIM(@FLD_NM)+' IS NULL THEN 0 ELSE '+RTRIM(@FLD_NM)+' END)  FROM '+@BHENT+'ITEM A INNER JOIN DCMAST B ON (A.ENTRY_TY=B.ENTRY_TY ) WHERE A.DATE BETWEEN '+CHAR(39)+CAST(@WEFSTKFROM AS VARCHAR)+CHAR(39)+ ' AND '+CHAR(39)+CAST(@WEFSTKTO AS VARCHAR)+CHAR(39) +' AND A.ENTRY_TY='+CHAR(39)+@ENTRY_TY+CHAR(39)+' AND B.FLD_NM='''+RTRIM(@FLD_NM)+''' AND B.STKVAL=1' --Added by Shrikant S. on 03 Apr, 2010 For TKT-863		----Commented By Shrikant S. on 21/02/2013 for Bug-9009		
			----Added By Shrikant S. on 21/02/2013 for Bug-9009		--Start
			SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+'SELECT A.ENTRY_TY,A.TRAN_CD,A.ITSERIAL,(CASE WHEN A.'+RTRIM(@FLD_NM)+' IS NULL THEN 0 ELSE A.'+RTRIM(@FLD_NM)+' END)  
				FROM '+@BHENT+'ITEM A INNER JOIN DCMAST B ON (A.ENTRY_TY=B.ENTRY_TY ) 
				INNER JOIN '+@MainTable+' C ON (C.TRAN_CD=A.TRAN_CD)
				WHERE A.DATE BETWEEN '+CHAR(39)+CAST(@WEFSTKFROM AS VARCHAR)+CHAR(39)+ ' AND '+CHAR(39)+CAST(@WEFSTKTO AS VARCHAR)+CHAR(39) 
				+' AND A.ENTRY_TY='+CHAR(39)+@ENTRY_TY+CHAR(39)+' AND B.FLD_NM='''
				+RTRIM(@FLD_NM)+''' AND B.STKVAL=1 '+CASE WHEN @IncExciseCol=1 and @codeType='E' THEN +' AND C.INCEXCISE=1 ' ELSE '' END
			----Added By Shrikant S. on 21/02/2013 for Bug-9009		--End
			EXECUTE SP_EXECUTESQL @SQLCOMMAND	
			SET @SQLCOMMAND='UPDATE  A SET A.PMI=A.PMI '+@A_S+' B.AMT FROM #ITEM1 B INNER JOIN #RECEIPT A ON (A.ENTRY_TY=B.ENTRY_TY AND A.TRAN_CD=B.TRAN_CD AND A.ITSERIAL=B.ITSERIAL)  WHERE  A.ENTRY_TY='+CHAR(39)+@ENTRY_TY+CHAR(39)
			
			EXECUTE SP_EXECUTESQL @SQLCOMMAND
		END	
		ELSE
		BEGIN
			
			--IF @TBHENT='~~'  --SALES TAX --Commented by Shrikant S. on 03 Apr, 2010 For TKT-863
			IF @TAX_NAME<>''  --SALES TAX  --Added by Shrikant S. on 03 Apr, 2010 For TKT-863
			BEGIN
				DELETE FROM #ITEM1
				
				SET @SQLCOMMAND='INSERT INTO #ITEM1  (ENTRY_TY,TRAN_CD,ITSERIAL,AMT)'
				--SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+'SELECT ENTRY_TY,TRAN_CD,ITSERIAL=0,(CASE WHEN '+RTRIM(@FLD_NM)+' IS NULL THEN 0 ELSE '+RTRIM(@FLD_NM)+' END)  FROM '+@BHENT+'MAIN WHERE DATE BETWEEN '+CHAR(39)+CAST(@WEFSTKFROM AS VARCHAR)+CHAR(39)+ ' AND '+CHAR(39)+CAST(@WEFSTKTO AS VARCHAR)+CHAR(39)+' AND ENTRY_TY='+CHAR(39)+@ENTRY_TY+CHAR(39) +' AND TAX_NAME='+CHAR(39) +@TAX_NAME+CHAR(39) --rup
				--SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+'SELECT ENTRY_TY,TRAN_CD,ITSERIAL=0,(CASE WHEN '+RTRIM(@FLD_NM)+' IS NULL THEN 0 ELSE '+RTRIM(@FLD_NM)+' END)  FROM '+@BHENT+'MAIN WHERE DATE BETWEEN '+CHAR(39)+CAST(@WEFSTKFROM AS VARCHAR)+CHAR(39)+ ' AND '+CHAR(39)+CAST(@WEFSTKTO AS VARCHAR)+CHAR(39)+' AND ENTRY_TY='+CHAR(39)+@ENTRY_TY+CHAR(39) +' AND TAX_NAME='+CHAR(39) +@TAX_NAME+CHAR(39)+' and  taxamt<>0' --Commented by Shrikant S. on 03 Apr, 2010 for TKT-863
				--SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+'SELECT A.ENTRY_TY,A.TRAN_CD,ITSERIAL=0,(CASE WHEN '+RTRIM(@FLD_NM)+' IS NULL THEN 0 ELSE '+RTRIM(@FLD_NM)+' END)  FROM '+@BHENT+'MAIN A INNER JOIN STAX_MAS B ON (A.ENTRY_TY=B.ENTRY_TY AND RTRIM(A.TAX_NAME)=RTRIM(B.TAX_NAME)) WHERE A.DATE BETWEEN '+CHAR(39)+CAST(@WEFSTKFROM AS VARCHAR)+CHAR(39)+ ' AND '+CHAR(39)+CAST(@WEFSTKTO AS VARCHAR)+CHAR(39)+' AND A.ENTRY_TY='+CHAR(39)+@ENTRY_TY+CHAR(39) +' AND A.TAX_NAME='+CHAR(39) +@TAX_NAME+CHAR(39)+' and  A.taxamt<>0 AND B.STKVAL=1 ' --Added by Shrikant S. on 03 Apr, 2010 for TKT-863
				SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+'SELECT A.ENTRY_TY,A.TRAN_CD,A.ITSERIAL,(CASE WHEN '+RTRIM(@FLD_NM)+' IS NULL THEN 0 ELSE '+RTRIM(@FLD_NM)+' END)  FROM '+@BHENT+'ITEM A INNER JOIN STAX_MAS B ON (A.ENTRY_TY=B.ENTRY_TY AND RTRIM(A.TAX_NAME)=RTRIM(B.TAX_NAME)) WHERE A.DATE BETWEEN '+CHAR(39)+CAST(@WEFSTKFROM AS VARCHAR)+CHAR(39)+ ' AND '+CHAR(39)+CAST(@WEFSTKTO AS VARCHAR)+CHAR(39)+' AND A.ENTRY_TY='+CHAR(39)+@ENTRY_TY+CHAR(39) +' AND A.TAX_NAME='+CHAR(39) +@TAX_NAME+CHAR(39)+' and  A.taxamt<>0 AND B.STKVAL=1 ' --Changed by Shrikant S. on 06 Apr, 2010 for TKT-863
				EXECUTE SP_EXECUTESQL @SQLCOMMAND
				SET @SQLCOMMAND='UPDATE A SET A.PMI=A.PMI '+@A_S+' B.AMT FROM #ITEM1 B INNER JOIN #RECEIPT A ON (A.ENTRY_TY=B.ENTRY_TY AND A.TRAN_CD=B.TRAN_CD AND A.ITSERIAL=B.ITSERIAL)  WHERE  A.ENTRY_TY='+CHAR(39)+@ENTRY_TY+CHAR(39)+' ' --Added by Shrikant S. on 20/11/2012 For Bug-7312
				--SET @SQLCOMMAND='UPDATE A SET A.PMI= B.AMT FROM #ITEM1 B INNER JOIN #RECEIPT A ON (A.ENTRY_TY=B.ENTRY_TY AND A.TRAN_CD=B.TRAN_CD AND A.ITSERIAL=B.ITSERIAL)  WHERE  A.ENTRY_TY='+CHAR(39)+@ENTRY_TY+CHAR(39)+' ' --Added by Shrikant S. on 06 Apr, 2010 for TKT-863 --Commented by Shrikant S. on 20/11/2012 For Bug-7312		
				EXECUTE SP_EXECUTESQL @SQLCOMMAND --Added by Shrikant S. on 06 Apr, 2010 for TKT-863

				
			END
			ELSE
			BEGIN
				DELETE FROM #ITEM1 --Added by Shrikant S. on 06 Apr, 2010 For TKT-863
				SET @SQLCOMMAND='INSERT INTO #ITEM1  (ENTRY_TY,TRAN_CD,ITSERIAL,AMT)'
				--SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+'SELECT ENTRY_TY,TRAN_CD,ITSERIAL=0,(CASE WHEN '+RTRIM(@FLD_NM)+' IS NULL THEN 0 ELSE '+RTRIM(@FLD_NM)+' END)  FROM '+@BHENT+'MAIN WHERE DATE BETWEEN '+CHAR(39)+CAST(@WEFSTKFROM AS VARCHAR)+CHAR(39)+ ' AND '+CHAR(39)+CAST(@WEFSTKTO AS VARCHAR)+CHAR(39)+' AND ENTRY_TY='+CHAR(39)+@ENTRY_TY+CHAR(39) --Commented by Shrikant S. on 03 Apr, 2010 for TKT-863
				--SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+'SELECT A.ENTRY_TY,A.TRAN_CD,ITSERIAL=0,(CASE WHEN '+RTRIM(@FLD_NM)+' IS NULL THEN 0 ELSE '+RTRIM(@FLD_NM)+' END)  FROM '+@BHENT+'MAIN A INNER JOIN DCMAST B ON (A.ENTRY_TY=B.ENTRY_TY) WHERE A.DATE BETWEEN '+CHAR(39)+CAST(@WEFSTKFROM AS VARCHAR)+CHAR(39)+ ' AND '+CHAR(39)+CAST(@WEFSTKTO AS VARCHAR)+CHAR(39)+' AND A.ENTRY_TY='+CHAR(39)+@ENTRY_TY+CHAR(39)+' AND B.FLD_NM='''+RTRIM(@FLD_NM)+''' AND B.STKVAL=1' --Added by Shrikant S. on 03 Apr, 2010 for TKT-863		--Commented By Shrikant S. on 21/02/2013 for Bug-9009		
				----Added By Shrikant S. on 21/02/2013 for Bug-9009		--Start
				SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+'SELECT A.ENTRY_TY,A.TRAN_CD,ITSERIAL=0,(CASE WHEN '+RTRIM(@FLD_NM)+' IS NULL THEN 0 ELSE '
										+RTRIM(@FLD_NM)+' END)  FROM '+@BHENT+'MAIN A INNER JOIN DCMAST B ON (A.ENTRY_TY=B.ENTRY_TY) WHERE A.DATE BETWEEN '
										+CHAR(39)+CAST(@WEFSTKFROM AS VARCHAR)+CHAR(39)+ ' AND '+CHAR(39)+CAST(@WEFSTKTO AS VARCHAR)+CHAR(39)
										+' AND A.ENTRY_TY='+CHAR(39)+@ENTRY_TY+CHAR(39)+' AND B.FLD_NM='''+RTRIM(@FLD_NM)+''' AND B.STKVAL=1' 
										+CASE WHEN @IncExciseCol=1 and @codeType='E' THEN +' AND A.INCEXCISE=1 ' ELSE '' END
				----Added By Shrikant S. on 21/02/2013 for Bug-9009		--End
				EXECUTE SP_EXECUTESQL @SQLCOMMAND	
				/* Added by shrikant s. on 06 apr, 2010*/ 				
				SET @SQLCOMMAND='select  a=1,A.TOTPMV,A.TOTPMV, B.AMT FROM #ITEM1 B INNER JOIN #RECEIPT A ON (A.ENTRY_TY=B.ENTRY_TY AND A.TRAN_CD=B.TRAN_CD ) WHERE  A.ENTRY_TY='+CHAR(39)+@ENTRY_TY+CHAR(39)
				--EXECUTE SP_EXECUTESQL @SQLCOMMAND
				SET @SQLCOMMAND='UPDATE  A SET A.TOTPMV=A.TOTPMV '+@A_S+' B.AMT FROM #ITEM1 B INNER JOIN #RECEIPT A ON (A.ENTRY_TY=B.ENTRY_TY AND A.TRAN_CD=B.TRAN_CD ) WHERE  A.ENTRY_TY='+CHAR(39)+@ENTRY_TY+CHAR(39)
				EXECUTE SP_EXECUTESQL @SQLCOMMAND
				/* Added by shrikant s. on 06 apr, 2010*/ 				

			END	

/* Commented by Shrikant S. on 06 Apr, 2010 for TKT-863*/		
--			EXECUTE SP_EXECUTESQL @SQLCOMMAND	
--			SET @SQLCOMMAND='select  a=1,A.TOTPMV,A.TOTPMV, B.AMT FROM #ITEM1 B INNER JOIN #RECEIPT A ON (A.ENTRY_TY=B.ENTRY_TY AND A.TRAN_CD=B.TRAN_CD ) WHERE  A.ENTRY_TY='+CHAR(39)+@ENTRY_TY+CHAR(39)
--			--EXECUTE SP_EXECUTESQL @SQLCOMMAND
--			SET @SQLCOMMAND='UPDATE  A SET A.TOTPMV=A.TOTPMV '+@A_S+' B.AMT FROM #ITEM1 B INNER JOIN #RECEIPT A ON (A.ENTRY_TY=B.ENTRY_TY AND A.TRAN_CD=B.TRAN_CD ) WHERE  A.ENTRY_TY='+CHAR(39)+@ENTRY_TY+CHAR(39)
--			EXECUTE SP_EXECUTESQL @SQLCOMMAND
/* Commented by Shrikant S. on 06 Apr, 2010 for TKT-863*/					
			

		END
		FETCH NEXT FROM  C3STKVAL INTO @FLD_NM,@ATT_FILE,@A_S,@WEFSTKFROM,@WEFSTKTO,@TBHENT,@TAX_NAME
	END
	CLOSE C3STKVAL
	DEALLOCATE C3STKVAL
	
	--Bug5445
	DECLARE  C4STKVAL CURSOR FOR 
	SELECT FLD_NM,ATT_FILE,A_S,WEFSTKFROM,WEFSTKTO,BHENT,TAX_NAME FROM #TAXEXCL WHERE (ENTRY_TY=@ENTRY_TY) OR (BHENT='~~')
	OPEN C4STKVAL
	FETCH NEXT FROM  C4STKVAL INTO @FLD_NM,@ATT_FILE,@A_S,@WEFSTKFROM,@WEFSTKTO,@TBHENT,@TAX_NAME
	WHILE @@FETCH_STATUS=0
	BEGIN
		set @codeType=''
		IF @ATT_FILE='0'
		BEGIN
		    DELETE FROM #ITEM1
		    Select Top 1 @codeType=Code From Dcmast Where Entry_ty=@ENTRY_TY and fld_nm=@FLD_NM		
			SET @SQLCOMMAND='INSERT INTO #ITEM1  (ENTRY_TY,TRAN_CD,ITSERIAL,AMT)'
			SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+'SELECT A.ENTRY_TY,A.TRAN_CD,A.ITSERIAL,(CASE WHEN A.'+RTRIM(@FLD_NM)+' IS NULL THEN 0 ELSE A.'+RTRIM(@FLD_NM)+' END)  
				FROM '+@BHENT+'ITEM A INNER JOIN DCMAST B ON (A.ENTRY_TY=B.ENTRY_TY ) 
				INNER JOIN '+@MainTable+' C ON (C.TRAN_CD=A.TRAN_CD)
				WHERE A.ENTRY_TY='+CHAR(39)+@ENTRY_TY+CHAR(39)+' AND B.FLD_NM='''
				+RTRIM(@FLD_NM)+''' AND B.STKVAL=0 '+CASE WHEN @IncExciseCol=1 and @codeType='E' THEN +' AND C.INCEXCISE=0 ' ELSE '' END
			EXECUTE SP_EXECUTESQL @SQLCOMMAND	
			SET @SQLCOMMAND='UPDATE  A SET A.PMI=A.PMI '+@A_S+' B.AMT FROM #ITEM1 B INNER JOIN #RECEIPT A ON (A.ENTRY_TY=B.ENTRY_TY AND A.TRAN_CD=B.TRAN_CD AND A.ITSERIAL=B.ITSERIAL)  WHERE  A.ENTRY_TY='+CHAR(39)+@ENTRY_TY+CHAR(39)
			
			EXECUTE SP_EXECUTESQL @SQLCOMMAND
		END	
		ELSE
		BEGIN
				DELETE FROM #ITEM1
				SET @SQLCOMMAND='INSERT INTO #ITEM1  (ENTRY_TY,TRAN_CD,ITSERIAL,AMT)'
				SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+'SELECT A.ENTRY_TY,A.TRAN_CD,ITSERIAL=0,(CASE WHEN '+RTRIM(@FLD_NM)+' IS NULL THEN 0 ELSE '
					+RTRIM(@FLD_NM)+' END)  FROM '+@BHENT+'MAIN A INNER JOIN DCMAST B ON (A.ENTRY_TY=B.ENTRY_TY) 
					WHERE A.ENTRY_TY='+CHAR(39)+@ENTRY_TY+CHAR(39)+' AND B.FLD_NM='''+RTRIM(@FLD_NM)+''' AND B.STKVAL=0' 
					+CASE WHEN @IncExciseCol=1 and @codeType='E' THEN +' AND A.INCEXCISE=0 ' ELSE '' END
				EXECUTE SP_EXECUTESQL @SQLCOMMAND	
				SET @SQLCOMMAND='select  a=1,A.TOTPMV,A.TOTPMV, B.AMT FROM #ITEM1 B INNER JOIN #RECEIPT A ON (A.ENTRY_TY=B.ENTRY_TY AND A.TRAN_CD=B.TRAN_CD ) WHERE  A.ENTRY_TY='+CHAR(39)+@ENTRY_TY+CHAR(39)
				SET @SQLCOMMAND='UPDATE  A SET A.TOTPMV=A.TOTPMV '+@A_S+' B.AMT FROM #ITEM1 B INNER JOIN #RECEIPT A ON (A.ENTRY_TY=B.ENTRY_TY AND A.TRAN_CD=B.TRAN_CD ) WHERE  A.ENTRY_TY='+CHAR(39)+@ENTRY_TY+CHAR(39)
				EXECUTE SP_EXECUTESQL @SQLCOMMAND
		END
		FETCH NEXT FROM  C4STKVAL INTO @FLD_NM,@ATT_FILE,@A_S,@WEFSTKFROM,@WEFSTKTO,@TBHENT,@TAX_NAME
	END
	CLOSE C4STKVAL
	DEALLOCATE C4STKVAL
	--Bug5445
	
	FETCH NEXT FROM C2STKVAL INTO @ENTRY_TY,@BHENT
END
CLOSE C2STKVAL
DEALLOCATE C2STKVAL



---<--Update PMI=Item wise plus/minus amount from dcmast,stax_mas,TOTPMV=Total Voucher wise plus/minus amount from dcmast,stax_mas into ##STKVAL1 from all Item Tables

----->Update (Item wise i.e. Sales Tax,Packing Forwarding )PMV form total Voucher wise plus/minus amount  from dcmast,stax_mas into ##STKVAL1 from all Item Tables
-- Commented By Pankaj B. On 24-04-2014 for Bug-23326 start
--Added by Shrikant S. on 06 Apr, 2010 for TKT-863
--UPDATE A SET ASSEAMT=B.ASSEAMT FROM #RECEIPT A INNER JOIN 
--(SELECT ENTRY_TY,TRAN_CD,ASSEAMT=SUM(QTY * RATE) FROM #RECEIPT  GROUP BY ENTRY_TY,TRAN_CD) B 
--ON A.ENTRY_TY=B.ENTRY_TY AND A.TRAN_CD=B.TRAN_CD
--Added by Shrikant S. on 06 Apr, 2010 for TKT-863
-- Commented By Pankaj B. On 24-04-2014 for Bug-23326 End

UPDATE A SET ASSEAMT=(select SUM(b.QTY * b.RATE) from STKL_VW_ITEM B where A.TRAN_CD=B.TRAN_CD and A.ENTRY_TY=B.ENTRY_TY) FROM #RECEIPT A -- Added By Pankaj B. On 24-04-2014 for Bug-23326 

--UPDATE  #RECEIPT SET PMV=(TOTPMV*GRO_AMT)/(CASE WHEN MGRO_AMT=0 THEN 1 ELSE MGRO_AMT END)  WHERE PMKEY='+' --Commented by Shrikant S. on 06 Apr, 2010 for TKT-863
UPDATE  #RECEIPT SET PMV=(TOTPMV*(QTY * RATE))/(CASE WHEN ASSEAMT=0 THEN 1 ELSE ASSEAMT END)  WHERE PMKEY='+'  --Added by shrikant s. on 06 Apr, 2010 For TKT-863
----<-Update (Item wise i.e. Sales Tax,Packing Forwarding )PMV form total Voucher wise plus/minus amount  from dcmast,stax_mas into ##STKVAL1 from all Item Tables
----->Calculate FRATE=fianal rate

UPDATE  #RECEIPT SET FRATE=(((QTY*RATE)/RATEPER)+PMI+PMV)/(CASE WHEN qty=0 THEN 1 ELSE qty END)   WHERE PMKEY='+'

UPDATE  #RECEIPT SET FRATE=0 WHERE BHENT='SR'
----<-Calculate FRATE=fianal rate
----->Update FRATE TO RECEIPT WHERE FRATE=0 WITH PREV.ENTRY RATE.

--select 'c',* from #RECEIPT
SET @LRATE=0
SET @MIT_CODE=-1
SET @MWARE_NM=' '
SET @MVNAME	=' '	--Bug20309
SELECT * INTO #TRECEIPT FROM #RECEIPT
--SELECT 'a',IT_CODE,FRATE,ENTRY_TY,TRAN_CD,ITSERIAL,WARE_NM FROM #TRECEIPT ORDER BY IT_CODE,WARE_NM,DATE,(CASE WHEN ENTRY_TY='OS' THEN 'A' ELSE (CASE WHEN PMKEY='+' THEN (CASE WHEN ENTRY_TY='SR' THEN 'C' ELSE 'B' end) ELSE 'D' END) END),TRAN_CD,ITSERIAL
---->Update FRATE TO RECEIPT WHERE FRATE=0 WITH PREV.ENTRY RATE.
/*DECLARE  STKVALCRSOR1 CURSOR FOR SELECT FRATE,ENTRY_TY,TRAN_CD,ITSERIAL,WARE_NM FROM #TRECEIPT ORDER BY IT_CODE,WARE_NM,DATE,(CASE WHEN ENTRY_TY='OS' THEN 'A' ELSE (CASE WHEN PMKEY='+' THEN 'B' ELSE 'C'END) END),TRAN_CD,ITSERIAL Rup 29/12/2009*/
DECLARE  STKVALCRSOR1 CURSOR FOR SELECT IT_CODE,FRATE,ENTRY_TY,TRAN_CD,ITSERIAL,WARE_NM,dc_no,VNAME FROM #TRECEIPT ---Change by sandeep for bug-1724 on 31/12/12	   	--Bug20309		
--ORDER BY IT_CODE,WARE_NM,DATE,(CASE WHEN ENTRY_TY='OS' THEN 'A' ELSE (CASE WHEN PMKEY='+' THEN 'B' ELSE 'C'END) END),TRAN_CD,ITSERIAL /*Rup 05/04/2010 TKT-806*/
ORDER BY VNAME,IT_CODE,WARE_NM,DATE,(CASE WHEN ENTRY_TY='OS' THEN 'A' ELSE (CASE WHEN PMKEY='+' THEN (CASE WHEN ENTRY_TY='SR' THEN 'C' ELSE 'B' end) ELSE 'D' END) END),TRAN_CD,ITSERIAL	--Bug20309
OPEN  STKVALCRSOR1
FETCH NEXT FROM STKVALCRSOR1 INTO @IT_CODE,@FRATE,@ENTRY_TY,@TRAN_CD,@ITSERIAL,@WARE_NM,@dc_no,@VNAME	-----Change by sandeep for bug-1724 on 31/12/12	   		--Bug20309
WHILE (@@FETCH_STATUS=0)
BEGIN
	--IF (@MIT_CODE<>@IT_CODE) OR (@MWARE_NM<>@WARE_NM) OR (@MVNAME<>@VNAME)	--Bug22534
	IF (@MIT_CODE<>@IT_CODE) OR (@MVNAME<>@VNAME)	--Bug22534
	BEGIN
		SET @LRATE=@FRATE
		SET @MIT_CODE=@IT_CODE
		--SET @MWARE_NM=@WARE_NM Bug22534
		SET @MVNAME=@VNAME			--Bug20309
	END

	IF (@FRATE)>0
	BEGIN
		SET @LRATE=@FRATE
	END
	IF (@FRATE=0 AND @LRATE>0)
	BEGIN
		UPDATE #RECEIPT SET FRATE=@LRATE WHERE (ENTRY_TY=@ENTRY_TY AND TRAN_CD=@TRAN_CD AND ITSERIAL=@ITSERIAL)
	END

	FETCH NEXT FROM STKVALCRSOR1 INTO @IT_CODE,@FRATE,@ENTRY_TY,@TRAN_CD,@ITSERIAL,@WARE_NM,@dc_no,@VNAME ---Change by sandeep for bug-1724 on 31/12/12	   		--Bug20309
END
CLOSE STKVALCRSOR1
DEALLOCATE STKVALCRSOR1
----<-Update FRATE TO RECEIPT WHERE FRATE=0 WITH PREV.ENTRY RATE.


UPDATE A SET A.FRATE=C.FRATE
FROM ##STKVAL1  A 
LEFT JOIN #RECEIPT C ON (C.ENTRY_TY=A.ENTRY_TY AND C.TRAN_CD=A.TRAN_CD AND C.ITSERIAL=A.ITSERIAL)
--WHERE (ISNULL(C.RATE,0)<>0 AND C.RATE<>0) /*Rup 29/12/2009*/

---->Update Frate with Allocated Entry raete (AR<-PT)
SELECT A.ENTRY_TY,A.DATE,A.TRAN_CD,A.ITSERIAL,A.RENTRY_TY,A.ITREF_TRAN,A.RITSERIAL INTO #ITR1 FROM STKL_VW_ITREF A INNER JOIN LCODE B ON (A.RENTRY_TY=B.ENTRY_TY) INNER JOIN LCODE C ON (A.ENTRY_TY=C.ENTRY_TY) where B.inv_stk<>' ' AND B.INV_STK=C.INV_STK --AND A.DATE<=@EDATE
UPDATE A SET A.FRATE=C.FRATE 
FROM ##STKVAL1  A 
LEFT JOIN #ITR1 B ON (A.ENTRY_TY=B.RENTRY_TY AND A.TRAN_CD=B.ITREF_TRAN AND A.ITSERIAL=B.RITSERIAL)
LEFT JOIN #RECEIPT C ON (C.ENTRY_TY=B.ENTRY_TY AND C.TRAN_CD=B.TRAN_CD AND C.ITSERIAL=B.ITSERIAL)
WHERE (ISNULL(C.RATE,0)<>0 AND C.RATE<>0)
---<-Update Frate with Allocated Entry raete (AR<-PT)

--->Delete Allcated entry i.e. PT
--DELETE FROM ##STKVAL1 WHERE LEN(DC_NO)>0  --Commented by sandeep for 1724
DELETE FROM ##STKVAL1 WHERE LEN(DC_NO)>2 -----Change by sandeep for bug-1724 on 31/12/12	   		
---<-Delete Allcated entry i.e. PT

DECLARE @CNT NUMERIC(18)
SET @CNT=0
--SET @VALMETHOD='FIFO'
--IF (@VALMETHOD='FIFO' or @VALMETHOD='LIFO')	--Bug20309	--For FIFO
--BEGIN											--Bug20309
	--->In Receipt Entry qty and rate direct enter into ##STKVALFL .In Issue entry Qty is allocated prev receipt entry.If Issue is allocated againts multiple receipt then it has multiple entries with same qty and different allocated qty (aqty) field.

	DECLARE @FETCH_STATUSFifo BIT	--Bug20309
	SELECT ENTRY_TY,TRAN_CD,ITSERIAL,WARE_NM,DATE,IT_CODE,QTY,RATE=FRATE,AQTY=QTY,PMKEY,CNT=0,IT_NAME,AENTRY_TY=ENTRY_TY,ATRAN_CD=TRAN_CD,AITSERIAL=ITSERIAL,AWARE_NM=WARE_NM,ADATE=DATE,DC_NO,VNAME,AVNAME=VNAME INTO ##STKVALFIFO FROM ##STKVAL1 WHERE 1=2 -----Change by sandeep for bug-1724 on 31/12/12	   		--Bug20309
	
	DECLARE STKVALCRSOR1 CURSOR FOR 
	--SELECT ENTRY_TY,TRAN_CD,ITSERIAL,WARE_NM,DATE,IT_CODE,QTY,FRATE,PMKEY,IT_NAME,DC_NO FROM  ##STKVAL1 ORDER BY IT_CODE,WARE_NM,DATE,(CASE WHEN ENTRY_TY='OS' THEN 'A' ELSE (CASE WHEN PMKEY='+' THEN 'B' ELSE 'C'END) END),TRAN_CD,ITSERIAL -----Change by sandeep for bug-1724 on 31/12/12	   			--Bug8025
	SELECT ENTRY_TY,TRAN_CD,ITSERIAL,WARE_NM,DATE,IT_CODE,QTY,FRATE,PMKEY,IT_NAME,DC_NO,VNAME FROM ##STKVAL1  WHERE VTYPE = 'FIFO' or VTYPE = '' ORDER BY VNAME,IT_CODE,WARE_NM,(CASE WHEN ENTRY_TY='OS' THEN 'A' ELSE (CASE WHEN PMKEY='+' THEN 'B' ELSE 'C'END) END),DATE,TRAN_CD,ITSERIAL	--Bug8025	--Bug20309
	OPEN STKVALCRSOR1
	FETCH NEXT FROM STKVALCRSOR1 INTO @ENTRY_TY,@TRAN_CD,@ITSERIAL,@WARE_NM,@DATE,@IT_CODE,@QTY,@RATE,@PMKEY,@IT_NAME,@DC_NO,@VNAME	-----Change by sandeep for bug-1724 on 31/12/12	   			--Bug20309	
	--                                        	
	WHILE (@@FETCH_STATUS=0)
	BEGIN
		
		SET @CNT=@CNT+1	
		IF (@PMKEY='+')
		BEGIN
			
			INSERT INTO ##STKVALFIFO
				(ENTRY_TY,TRAN_CD,ITSERIAL,WARE_NM,DATE,IT_CODE,QTY,RATE,AQTY,PMKEY,CNT,IT_NAME,AENTRY_TY,ATRAN_CD,AITSERIAL,AWARE_NM,ADATE,DC_NO,VNAME)	--Bug20309 
			VALUES (@ENTRY_TY,@TRAN_CD,@ITSERIAL,@WARE_NM,@DATE,@IT_CODE,@QTY,@RATE,0,@PMKEY,@CNT,@IT_NAME,' ',0,' ',' ',@SDATE,@DC_NO,@VNAME) -----Change by sandeep for bug-1724 on 31/12/12	   			--Bug20309
		END			
		IF (@PMKEY='-')
		BEGIN
			
			SET @IBALQTY1=@QTY
			
			--IF  @VALMETHOD='FIFO'	--Bug20309
			--BEGIN					--Bug20309
				DECLARE STKVALCRSOR2 CURSOR FOR 
				--SELECT ENTRY_TY,TRAN_CD,ITSERIAL,VNAME,WARE_NM,DATE,IT_CODE,QTY,RATE,AQTY FROM ##STKVALFIFO WHERE (WARE_NM=@WARE_NM AND IT_CODE=@IT_CODE AND VNAME=@VNAME) AND (PMKEY='+') AND ((QTY-AQTY)>0) ORDER BY VNAME,IT_CODE ,WARE_NM,DATE,TRAN_CD,ITSERIAL	--Bug22534
				SELECT ENTRY_TY,TRAN_CD,ITSERIAL,VNAME,WARE_NM,DATE,IT_CODE,QTY,RATE,AQTY FROM ##STKVALFIFO WHERE ( IT_CODE=@IT_CODE AND VNAME=@VNAME) AND (PMKEY='+') AND ((QTY-AQTY)>0) ORDER BY VNAME,IT_CODE ,DATE,TRAN_CD,ITSERIAL	--Bug22534				
			--Bug20309	
			--END
			--ELSE
			--BEGIN
			--	DECLARE STKVALCRSOR2 CURSOR FOR 
			--	SELECT ENTRY_TY,TRAN_CD,ITSERIAL,WARE_NM,DATE,IT_CODE,QTY,RATE,AQTY FROM ##STKVALFL WHERE (WARE_NM=@WARE_NM AND IT_CODE=@IT_CODE) AND (PMKEY='+') AND ((QTY-AQTY)>0) ORDER BY DATE desc,TRAN_CD desc ,ITSERIAL DESC --IT_CODE,WARE_NM,
			--END
			--Bug20309
			
			OPEN STKVALCRSOR2                                                          
			FETCH NEXT FROM STKVALCRSOR2 INTO @ENTRY_TY1,@TRAN_CD1,@ITSERIAL1,@VNAME1,@WARE_NM1,@DATE1,@IT_CODE1,@QTY1,@RATE1,@AQTY1	--Bug20309
			IF (@@FETCH_STATUS=0)
			BEGIN
				SET @FETCH_STATUSFifo=0	--Bug20309
			END
			WHILE (@FETCH_STATUSFifo=0)	--Bug20309
			BEGIN
				SET @CNT=@CNT+1
				print '--------'
				print @QTY1
				print @AQTY1
				print @IBALQTY1
				 IF ((@QTY1-@AQTY1-@IBALQTY1)>0)
				 BEGIN
					
					--SET @AQTY=@QTY-@IBALQTY1
					SET @AQTY=@IBALQTY1
					SET @IBALQTY1=0
					--SET @AQTY=@QTY
					  	
/*Start 25/03/2010	: Changes for Receipt Rate*/
--					UPDATE ##STKVALFL SET AQTY=AQTY+@QTY WHERE (ENTRY_TY=@ENTRY_TY1 AND TRAN_CD=@TRAN_CD1 AND ITSERIAL=@ITSERIAL1 AND IT_CODE=@IT_CODE)
					UPDATE ##STKVALFIFO SET AQTY=AQTY+@AQTY WHERE (ENTRY_TY=@ENTRY_TY1 AND TRAN_CD=@TRAN_CD1 AND ITSERIAL=@ITSERIAL1 AND IT_CODE=@IT_CODE)
/*End 25/03/2010		: Changes for Receipt Rate*/

					INSERT INTO ##STKVALFIFO
					    (ENTRY_TY,TRAN_CD,ITSERIAL,WARE_NM,DATE,IT_CODE,QTY,RATE,AQTY,PMKEY,CNT,IT_NAME,AENTRY_TY,ATRAN_CD,AITSERIAL,AWARE_NM,ADATE,DC_NO,VNAME,AVNAME)	--Bug20309
					VALUES (@ENTRY_TY,@TRAN_CD,@ITSERIAL,@WARE_NM,@DATE,@IT_CODE,@QTY,@RATE1,@AQTY,@PMKEY,@CNT,@IT_NAME,@ENTRY_TY1,@TRAN_CD1,@ITSERIAL1,@WARE_NM1,@DATE1,@DC_NO1,@VNAME,@VNAME1)	--Bug20309
				 END
				 ELSE
				 BEGIN
					
					SET @IBALQTY1=@IBALQTY1-(@QTY1-@AQTY1)
					SET @AQTY=(@QTY1-@AQTY1)
					
					UPDATE ##STKVALFIFO SET AQTY=QTY WHERE (ENTRY_TY=@ENTRY_TY1 AND TRAN_CD=@TRAN_CD1 AND ITSERIAL=@ITSERIAL1 AND IT_CODE=@IT_CODE)
					INSERT INTO ##STKVALFIFO
					    (ENTRY_TY,TRAN_CD,ITSERIAL,WARE_NM,DATE,IT_CODE,QTY,RATE,AQTY,PMKEY,CNT,IT_NAME,AENTRY_TY,ATRAN_CD,AITSERIAL,AWARE_NM,ADATE,DC_NO,VNAME,AVNAME)		--Bug20309
					VALUES (@ENTRY_TY,@TRAN_CD,@ITSERIAL,@WARE_NM,@DATE,@IT_CODE,@QTY,@RATE1,@AQTY,@PMKEY,@CNT,@IT_NAME,@ENTRY_TY1,@TRAN_CD1,@ITSERIAL1,@WARE_NM1,@DATE1,@DC_NO1,@VNAME,@VNAME1)		--Bug20309
				 END
				
				FETCH NEXT FROM STKVALCRSOR2 INTO @ENTRY_TY1,@TRAN_CD1,@ITSERIAL1,@VNAME1,@WARE_NM1,@DATE1,@IT_CODE1,@QTY1,@RATE1,@AQTY1	--Bug20309
				IF (@IBALQTY1=0 OR @@FETCH_STATUS<>0)
				BEGIN
					SET @FETCH_STATUSFifo=-1	--Bug20309
				END
			END	
			CLOSE STKVALCRSOR2
			DEALLOCATE STKVALCRSOR2
			
			
			IF @IBALQTY1>0
			BEGIN
				SET @AQTY=@IBALQTY1
				 INSERT INTO ##STKVALFIFO
					    (ENTRY_TY,TRAN_CD,ITSERIAL,WARE_NM,DATE,IT_CODE,QTY,RATE,AQTY,PMKEY,CNT,IT_NAME,AENTRY_TY,ATRAN_CD,AITSERIAL,AWARE_NM,ADATE,DC_NO,VNAME,AVNAME)	--Bug20309
				 VALUES (@ENTRY_TY,@TRAN_CD,@ITSERIAL,@WARE_NM,@DATE,@IT_CODE,@QTY,@RATE,@AQTY,@PMKEY,@CNT,@IT_NAME,' ',0,' ',' ',@SDATE,@DC_NO,@VNAME,' ')		--Bug20309								
			END
		END
		FETCH NEXT FROM STKVALCRSOR1 INTO @ENTRY_TY,@TRAN_CD,@ITSERIAL,@WARE_NM,@DATE,@IT_CODE,@QTY,@RATE,@PMKEY,@IT_NAME,@DC_NO,@VNAME				--Bug20309				
	END
	CLOSE STKVALCRSOR1
	DEALLOCATE STKVALCRSOR1

	--Bug8025 
	Select Colno=IDENTITY(int, 1, 1),Vname,It_Code,Ware_nm,Rate Into #tmp1STKVALFifo From ##STKVALFIFO	--Bug20309
		where PmKey = '-' and ATran_cd != 0 Order By VName,It_Code,Ware_nm,Date	--Bug20309
	
	-- Bug22534 start
	--Select Max(Colno) As ColNo,VName,It_Code,Ware_nm Into #tmp2STKVALFifo From #tmp1STKVALFifo	--Bug20309
	--	Group By VName,It_Code,Ware_nm		--Bug20309
	-- Bug22534 end
	-- Bug22534 START
	Select Max(Colno) As ColNo,VName,It_Code Into #tmp2STKVALFifo From #tmp1STKVALFifo	--Bug20309
	Group By VName,It_Code		--Bug20309
	-- Bug22534 End
		
	Update ##STKVALFIFO Set Rate = b.Rate from ##STKVALFIFO a,#tmp1STKVALFifo b,#tmp2STKVALFifo c
		Where a.It_code = b.It_code  and a.VName = b.VName	--	and a.Ware_nm = b.Ware_Nm Bug22534
		and b.colno = c.colno
		and a.PmKey = '-' and ATran_cd = 0
		
	Drop Table #tmp1STKVALFifo
	Drop Table #tmp2STKVALFifo
	--Bug8025
	
	INSERT INTO ##STKVAL 
	--(IT_CODE,IT_NAME,OPBAL,OPAMT,RQTY,RAMT,IQTY,IAMT,CLBAL,CLAMT,WARE_NM,VNAME)	--Added By Shrikant S. on 03/05/2012 for Bug-3900	--Bug22534
	--(IT_CODE,IT_NAME,OPBAL,OPAMT,RQTY,RAMT,IQTY,IAMT,CLBAL,CLAMT)			--Commented By Shrikant S. on 03/05/2012 for Bug-3900
	(IT_CODE,IT_NAME,OPBAL,OPAMT,RQTY,RAMT,IQTY,IAMT,CLBAL,CLAMT,VNAME)	-- Bug22534

--	SELECT 
--	IT_CODE,IT_NAME,
--	OPBAL=SUM(CASE WHEN ENTRY_TY='OS' OR DATE<@SDATE THEN (CASE WHEN PMKEY='+' THEN QTY ELSE -AQTY  END) ELSE 0  END)	    		
--	,OPAMT=SUM(CASE WHEN ENTRY_TY='OS' OR DATE<@SDATE THEN (CASE WHEN PMKEY='+' THEN QTY*RATE ELSE -(AQTY*RATE)  END) ELSE 0  END)
--	,RQTY=SUM(CASE WHEN (ENTRY_TY<>'OS' AND DATE>=@SDATE AND PMKEY='+') THEN QTY ELSE 0 END)
--	,RAMT=SUM(CASE WHEN (ENTRY_TY<>'OS' AND DATE>=@SDATE AND PMKEY='+') THEN QTY*RATE ELSE 0 END)
--	,IQTY=SUM(CASE WHEN (ENTRY_TY<>'OS' AND DATE>=@SDATE AND PMKEY='-') THEN AQTY ELSE 0 END)
--	,IAMT=SUM(CASE WHEN (ENTRY_TY<>'OS' AND DATE>=@SDATE AND PMKEY='-') THEN AQTY*RATE ELSE 0 END)
--	,CLBAL=SUM((CASE WHEN PMKEY='+' THEN QTY ELSE -AQTY  END))
--	,CLAMT=SUM(CASE WHEN PMKEY='+' THEN QTY*RATE ELSE -(AQTY*RATE)  END)
--	,WARE_NM															--Added By Shrikant S. on 03/05/2012 for Bug-3900
--	FROM ##STKVALFL 
--	GROUP BY IT_CODE,IT_NAME,WARE_NM 
	SELECT 
   IT_CODE,IT_NAME,
	OPBAL=SUM(CASE WHEN ENTRY_TY='OS' OR DATE<@SDATE THEN (CASE WHEN PMKEY='+' THEN (CASE WHEN DC_NO='DI' THEN 0 ELSE QTY END ) ELSE -AQTY  END) ELSE 0  END)--chnages by sandeep for bug-1724
	,OPAMT=SUM(CASE WHEN ENTRY_TY='OS' OR DATE<@SDATE THEN (CASE WHEN PMKEY='+' THEN QTY*RATE ELSE -(AQTY*RATE)  END) ELSE 0  END)
	,RQTY=SUM(CASE WHEN (ENTRY_TY<>'OS' AND DATE>=@SDATE AND PMKEY='+') THEN (CASE WHEN DC_NO='DI' THEN 0 ELSE QTY END ) ELSE 0 END) --chnages by sandeep for bug-1724
	,RAMT=SUM(CASE WHEN (ENTRY_TY<>'OS' AND DATE>=@SDATE AND PMKEY='+') THEN QTY*RATE ELSE 0 END)
	,IQTY=SUM(CASE WHEN (ENTRY_TY<>'OS' AND DATE>=@SDATE AND PMKEY='-') THEN AQTY ELSE 0 END)
	,IAMT=SUM(CASE WHEN (ENTRY_TY<>'OS' AND DATE>=@SDATE AND PMKEY='-') THEN AQTY*RATE ELSE 0 END)
	,CLBAL=SUM((CASE WHEN PMKEY='+' THEN (CASE WHEN DC_NO='DI' THEN 0 ELSE QTY END ) ELSE -AQTY  END)) --chnages by sandeep for bug-1724
	,CLAMT=SUM(CASE WHEN PMKEY='+' THEN QTY*RATE ELSE -(AQTY*RATE)  END)
	--,WARE_NM		Bug22534
	,VNAME	--Bug20309
	FROM ##STKVALFIFO 
	GROUP BY IT_CODE,IT_NAME,VNAME	--Bug22534

	--Bug22534 START
	--Update ##STKVAL Set Status = ''
	--Update ##STKVAL Set Status = ltrim(rtrim(Status))+'A' Where cast(it_code as varchar(10))+ware_nm in
	--	(Select cast(it_code as varchar(10))+ware_nm from ##STKVALFIFO where pmkey = '-' and ADate > Date)
	--Update ##STKVAL Set Status = ltrim(rtrim(Status))+'B' Where cast(it_code as varchar(10))+ware_nm in
	--	(Select cast(it_code as varchar(10))+ware_nm from ##STKVALFIFO where pmkey = '-' and ATran_cd = 0)
	--Bug22534 END
	
	DROP TABLE ##STKVALFIFO	--Bug20309

--END		--Bug20309

--IF (@VALMETHOD='FIFO' or @VALMETHOD='LIFO')	--Bug20309	--For LIFO
--BEGIN											--Bug20309
	--->In Receipt Entry qty and rate direct enter into ##STKVALFL .In Issue entry Qty is allocated prev receipt entry.If Issue is allocated againts multiple receipt then it has multiple entries with same qty and different allocated qty (aqty) field.

	DECLARE @FETCH_STATUSLifo BIT	--Bug20309
	SELECT ENTRY_TY,TRAN_CD,ITSERIAL,WARE_NM,DATE,IT_CODE,QTY,RATE=FRATE,AQTY=QTY,PMKEY,CNT=0,IT_NAME,AENTRY_TY=ENTRY_TY,ATRAN_CD=TRAN_CD,AITSERIAL=ITSERIAL,AWARE_NM=WARE_NM,ADATE=DATE,DC_NO,VNAME INTO ##STKVALLIFO FROM ##STKVAL1 WHERE 1=2 -----Change by sandeep for bug-1724 on 31/12/12	   		--Bug20309
	
	DECLARE STKVALCRSOR1 CURSOR FOR 
	--SELECT ENTRY_TY,TRAN_CD,ITSERIAL,WARE_NM,DATE,IT_CODE,QTY,FRATE,PMKEY,IT_NAME,DC_NO FROM  ##STKVAL1 ORDER BY IT_CODE,WARE_NM,DATE,(CASE WHEN ENTRY_TY='OS' THEN 'A' ELSE (CASE WHEN PMKEY='+' THEN 'B' ELSE 'C'END) END),TRAN_CD,ITSERIAL -----Change by sandeep for bug-1724 on 31/12/12	   			--Bug8025
	SELECT ENTRY_TY,TRAN_CD,ITSERIAL,WARE_NM,DATE,IT_CODE,QTY,FRATE,PMKEY,IT_NAME,DC_NO,VNAME FROM ##STKVAL1  WHERE VTYPE = 'LIFO' ORDER BY VNAME,IT_CODE,WARE_NM,(CASE WHEN ENTRY_TY='OS' THEN 'A' ELSE (CASE WHEN PMKEY='+' THEN 'B' ELSE 'C'END) END),DATE,TRAN_CD,ITSERIAL	--Bug8025	--Bug20309
	OPEN STKVALCRSOR1
	FETCH NEXT FROM STKVALCRSOR1 INTO @ENTRY_TY,@TRAN_CD,@ITSERIAL,@WARE_NM,@DATE,@IT_CODE,@QTY,@RATE,@PMKEY,@IT_NAME,@DC_NO,@VNAME	-----Change by sandeep for bug-1724 on 31/12/12	   			--Bug20309	
	--                                        	
	WHILE (@@FETCH_STATUS=0)
	BEGIN
		
		SET @CNT=@CNT+1	
		IF (@PMKEY='+')
		BEGIN
			
			INSERT INTO ##STKVALLIFO
				(ENTRY_TY,TRAN_CD,ITSERIAL,WARE_NM,DATE,IT_CODE,QTY,RATE,AQTY,PMKEY,CNT,IT_NAME,AENTRY_TY,ATRAN_CD,AITSERIAL,AWARE_NM,ADATE,DC_NO,VNAME)	--Bug20309 
			VALUES (@ENTRY_TY,@TRAN_CD,@ITSERIAL,@WARE_NM,@DATE,@IT_CODE,@QTY,@RATE,0,@PMKEY,@CNT,@IT_NAME,' ',0,' ',' ',@SDATE,@DC_NO,@VNAME) -----Change by sandeep for bug-1724 on 31/12/12	   			--Bug20309
		END			
		IF (@PMKEY='-')
		BEGIN
			
			SET @IBALQTY1=@QTY
			
			--Bug20309
			--IF @VALMETHOD='FIFO'
			--BEGIN
			--	DECLARE STKVALCRSOR2 CURSOR FOR 
			--	SELECT ENTRY_TY,TRAN_CD,ITSERIAL,WARE_NM,DATE,IT_CODE,QTY,RATE,AQTY FROM ##STKVALFL WHERE (WARE_NM=@WARE_NM AND IT_CODE=@IT_CODE) AND (PMKEY='+') AND ((QTY-AQTY)>0) ORDER BY IT_CODE ,WARE_NM,DATE,TRAN_CD,ITSERIAL
			--END
			--ELSE
			--BEGIN
			--Bug20309
				DECLARE STKVALCRSOR2 CURSOR FOR 
				--SELECT ENTRY_TY,TRAN_CD,ITSERIAL,WARE_NM,DATE,IT_CODE,QTY,RATE,AQTY FROM ##STKVALLIFO WHERE (WARE_NM=@WARE_NM AND IT_CODE=@IT_CODE) AND (PMKEY='+') AND ((QTY-AQTY)>0) ORDER BY DATE desc,TRAN_CD desc ,ITSERIAL DESC --IT_CODE,WARE_NM, Bug22534
				SELECT ENTRY_TY,TRAN_CD,ITSERIAL,WARE_NM,DATE,IT_CODE,QTY,RATE,AQTY FROM ##STKVALLIFO WHERE (IT_CODE=@IT_CODE) AND (PMKEY='+') AND ((QTY-AQTY)>0) ORDER BY DATE desc,TRAN_CD desc ,ITSERIAL DESC --IT_CODE,WARE_NM, Bug22534
			--END		--Bug20309
			OPEN STKVALCRSOR2                                                          
			FETCH NEXT FROM STKVALCRSOR2 INTO @ENTRY_TY1,@TRAN_CD1,@ITSERIAL1,@WARE_NM1,@DATE1,@IT_CODE1,@QTY1,@RATE1,@AQTY1
			IF (@@FETCH_STATUS=0)
			BEGIN
				SET @FETCH_STATUSLifo=0	--Bug20309
			END
			WHILE (@FETCH_STATUSLifo=0)	--Bug20309
			BEGIN
				SET @CNT=@CNT+1
				print '--------'
				print @QTY1
				print @AQTY1
				print @IBALQTY1
				 IF ((@QTY1-@AQTY1-@IBALQTY1)>0)
				 BEGIN
					
					--SET @AQTY=@QTY-@IBALQTY1
					SET @AQTY=@IBALQTY1
					SET @IBALQTY1=0
					--SET @AQTY=@QTY
					  	
/*Start 25/03/2010	: Changes for Receipt Rate*/
--					UPDATE ##STKVALFL SET AQTY=AQTY+@QTY WHERE (ENTRY_TY=@ENTRY_TY1 AND TRAN_CD=@TRAN_CD1 AND ITSERIAL=@ITSERIAL1 AND IT_CODE=@IT_CODE)
					UPDATE ##STKVALLIFO SET AQTY=AQTY+@AQTY WHERE (ENTRY_TY=@ENTRY_TY1 AND TRAN_CD=@TRAN_CD1 AND ITSERIAL=@ITSERIAL1 AND IT_CODE=@IT_CODE)
/*End 25/03/2010		: Changes for Receipt Rate*/

					INSERT INTO ##STKVALLIFO
					    (ENTRY_TY,TRAN_CD,ITSERIAL,WARE_NM,DATE,IT_CODE,QTY,RATE,AQTY,PMKEY,CNT,IT_NAME,AENTRY_TY,ATRAN_CD,AITSERIAL,AWARE_NM,ADATE,DC_NO,VNAME)	--Bug20309
					VALUES (@ENTRY_TY,@TRAN_CD,@ITSERIAL,@WARE_NM,@DATE,@IT_CODE,@QTY,@RATE1,@AQTY,@PMKEY,@CNT,@IT_NAME,@ENTRY_TY1,@TRAN_CD1,@ITSERIAL1,@WARE_NM1,@DATE1,@DC_NO1,@VNAME)	--Bug20309
				 END
				 ELSE
				 BEGIN
					
					SET @IBALQTY1=@IBALQTY1-(@QTY1-@AQTY1)
					SET @AQTY=(@QTY1-@AQTY1)
					
					UPDATE ##STKVALLIFO SET AQTY=QTY WHERE (ENTRY_TY=@ENTRY_TY1 AND TRAN_CD=@TRAN_CD1 AND ITSERIAL=@ITSERIAL1 AND IT_CODE=@IT_CODE)
					INSERT INTO ##STKVALLIFO
					    (ENTRY_TY,TRAN_CD,ITSERIAL,WARE_NM,DATE,IT_CODE,QTY,RATE,AQTY,PMKEY,CNT,IT_NAME,AENTRY_TY,ATRAN_CD,AITSERIAL,AWARE_NM,ADATE,DC_NO,VNAME)		--Bug20309
					VALUES (@ENTRY_TY,@TRAN_CD,@ITSERIAL,@WARE_NM,@DATE,@IT_CODE,@QTY,@RATE1,@AQTY,@PMKEY,@CNT,@IT_NAME,@ENTRY_TY1,@TRAN_CD1,@ITSERIAL1,@WARE_NM1,@DATE1,@DC_NO1,@VNAME)		--Bug20309
				 END
				
				
				FETCH NEXT FROM STKVALCRSOR2 INTO @ENTRY_TY1,@TRAN_CD1,@ITSERIAL1,@WARE_NM1,@DATE1,@IT_CODE1,@QTY1,@RATE1,@AQTY1
				IF (@IBALQTY1=0 OR @@FETCH_STATUS<>0)
				BEGIN
					SET @FETCH_STATUSLifo=-1		--Bug20309
				END
			END	
			CLOSE STKVALCRSOR2
			DEALLOCATE STKVALCRSOR2
			
			
			IF @IBALQTY1>0
			BEGIN
				SET @AQTY=@IBALQTY1
				 INSERT INTO ##STKVALLIFO
					    (ENTRY_TY,TRAN_CD,ITSERIAL,WARE_NM,DATE,IT_CODE,QTY,RATE,AQTY,PMKEY,CNT,IT_NAME,AENTRY_TY,ATRAN_CD,AITSERIAL,AWARE_NM,ADATE,DC_NO,VNAME)	--Bug20309
				 VALUES (@ENTRY_TY,@TRAN_CD,@ITSERIAL,@WARE_NM,@DATE,@IT_CODE,@QTY,@RATE,@AQTY,@PMKEY,@CNT,@IT_NAME,' ',0,' ',' ',@SDATE,@DC_NO,@VNAME)		--Bug20309								
			END
		END
		FETCH NEXT FROM STKVALCRSOR1 INTO @ENTRY_TY,@TRAN_CD,@ITSERIAL,@WARE_NM,@DATE,@IT_CODE,@QTY,@RATE,@PMKEY,@IT_NAME,@DC_NO,@VNAME				--Bug20309				
	END
	CLOSE STKVALCRSOR1
	DEALLOCATE STKVALCRSOR1

	--Bug8025 
	Select Colno=IDENTITY(int, 1, 1),It_Code,Ware_nm,Rate Into #tmp1STKVALLifo From ##STKVALLIFO
		where PmKey = '-' and ATran_cd != 0 Order By It_Code,Ware_nm,Date
	
	-- Bug22534 STRST
	--Select Max(Colno) As ColNo,It_Code,Ware_nm Into #tmp2STKVALLifo From #tmp1STKVALLifo
	--	Group By It_Code,Ware_nm
	-- Bug22534 END
	
	-- Bug22534 START
	Select Max(Colno) As ColNo,It_Code Into #tmp2STKVALLifo From #tmp1STKVALLifo
	Group By It_Code
	-- Bug22534 END	
	
	Update ##STKVALLIFO Set Rate = b.Rate from ##STKVALLIFO a,#tmp1STKVALLifo b,#tmp2STKVALLifo c
		Where a.It_code = b.It_code --and a.Ware_nm = b.Ware_Nm Bug22534
		and b.colno = c.colno
		and a.PmKey = '-' and ATran_cd = 0
		
	Drop Table #tmp1STKVALLifo
	Drop Table #tmp2STKVALLifo
	--Bug8025
	
	INSERT INTO ##STKVAL 
--	(IT_CODE,IT_NAME,OPBAL,OPAMT,RQTY,RAMT,IQTY,IAMT,CLBAL,CLAMT,WARE_NM,VNAME)	--Added By Shrikant S. on 03/05/2012 for Bug-3900	-- Bug22534
	(IT_CODE,IT_NAME,OPBAL,OPAMT,RQTY,RAMT,IQTY,IAMT,CLBAL,CLAMT,VNAME)	--Bug22534

	--(IT_CODE,IT_NAME,OPBAL,OPAMT,RQTY,RAMT,IQTY,IAMT,CLBAL,CLAMT)			--Commented By Shrikant S. on 03/05/2012 for Bug-3900
--	SELECT 
--	IT_CODE,IT_NAME,
--	OPBAL=SUM(CASE WHEN ENTRY_TY='OS' OR DATE<@SDATE THEN (CASE WHEN PMKEY='+' THEN QTY ELSE -AQTY  END) ELSE 0  END)	    		
--	,OPAMT=SUM(CASE WHEN ENTRY_TY='OS' OR DATE<@SDATE THEN (CASE WHEN PMKEY='+' THEN QTY*RATE ELSE -(AQTY*RATE)  END) ELSE 0  END)
--	,RQTY=SUM(CASE WHEN (ENTRY_TY<>'OS' AND DATE>=@SDATE AND PMKEY='+') THEN QTY ELSE 0 END)
--	,RAMT=SUM(CASE WHEN (ENTRY_TY<>'OS' AND DATE>=@SDATE AND PMKEY='+') THEN QTY*RATE ELSE 0 END)
--	,IQTY=SUM(CASE WHEN (ENTRY_TY<>'OS' AND DATE>=@SDATE AND PMKEY='-') THEN AQTY ELSE 0 END)
--	,IAMT=SUM(CASE WHEN (ENTRY_TY<>'OS' AND DATE>=@SDATE AND PMKEY='-') THEN AQTY*RATE ELSE 0 END)
--	,CLBAL=SUM((CASE WHEN PMKEY='+' THEN QTY ELSE -AQTY  END))
--	,CLAMT=SUM(CASE WHEN PMKEY='+' THEN QTY*RATE ELSE -(AQTY*RATE)  END)
--	,WARE_NM															--Added By Shrikant S. on 03/05/2012 for Bug-3900
--	FROM ##STKVALFL 
--	GROUP BY IT_CODE,IT_NAME,WARE_NM 
	SELECT 
   IT_CODE,IT_NAME,
	OPBAL=SUM(CASE WHEN ENTRY_TY='OS' OR DATE<@SDATE THEN (CASE WHEN PMKEY='+' THEN (CASE WHEN DC_NO='DI' THEN 0 ELSE QTY END ) ELSE -AQTY  END) ELSE 0  END)--chnages by sandeep for bug-1724
	,OPAMT=SUM(CASE WHEN ENTRY_TY='OS' OR DATE<@SDATE THEN (CASE WHEN PMKEY='+' THEN QTY*RATE ELSE -(AQTY*RATE)  END) ELSE 0  END)
	,RQTY=SUM(CASE WHEN (ENTRY_TY<>'OS' AND DATE>=@SDATE AND PMKEY='+') THEN (CASE WHEN DC_NO='DI' THEN 0 ELSE QTY END ) ELSE 0 END) --chnages by sandeep for bug-1724
	,RAMT=SUM(CASE WHEN (ENTRY_TY<>'OS' AND DATE>=@SDATE AND PMKEY='+') THEN QTY*RATE ELSE 0 END)
	,IQTY=SUM(CASE WHEN (ENTRY_TY<>'OS' AND DATE>=@SDATE AND PMKEY='-') THEN AQTY ELSE 0 END)
	,IAMT=SUM(CASE WHEN (ENTRY_TY<>'OS' AND DATE>=@SDATE AND PMKEY='-') THEN AQTY*RATE ELSE 0 END)
	,CLBAL=SUM((CASE WHEN PMKEY='+' THEN (CASE WHEN DC_NO='DI' THEN 0 ELSE QTY END ) ELSE -AQTY  END)) --chnages by sandeep for bug-1724
	,CLAMT=SUM(CASE WHEN PMKEY='+' THEN QTY*RATE ELSE -(AQTY*RATE)  END)
	--,WARE_NM	Bug22534	
	,VNAME	--Bug20309
	FROM ##STKVALLIFO 
	GROUP BY IT_CODE,IT_NAME,VNAME	--Bug22534

	--Bug8025
	Update ##STKVAL Set Status = ''
	-- Bug22534 START
	--Update ##STKVAL Set Status = ltrim(rtrim(Status))+'A' Where cast(it_code as varchar(10))+ware_nm in
	--	(Select cast(it_code as varchar(10))+ware_nm from ##STKVALLIFO where pmkey = '-' and ADate > Date)
	--Update ##STKVAL Set Status = ltrim(rtrim(Status))+'B' Where cast(it_code as varchar(10))+ware_nm in
	--	(Select cast(it_code as varchar(10))+ware_nm from ##STKVALLIFO where pmkey = '-' and ATran_cd = 0)
	--Bug22534 END
	
	DROP TABLE ##STKVALLIFO	--Bug20309

--END		--Bug20309

set @mit_code=-1
--IF @VALMETHOD='AVG'		--Bug20309	--For AVG
--BEGIN						--Bug20309
	declare @av_balqty numeric(17,3),@av_balamt numeric(17,2)

	SELECT ENTRY_TY,TRAN_CD,ITSERIAL,WARE_NM,DATE,IT_CODE,QTY,RATE=FRATE,PMKEY,CNT=0,IT_NAME,DC_NO,VNAME INTO ##STKVALAVG FROM ##STKVAL1 WHERE 1=2 ---Change by sandeep for bug-1724 on 31/12/12	   			--Bug20309
	DECLARE STKVALCRSOR1 CURSOR FOR 
	--SELECT ENTRY_TY,TRAN_CD,ITSERIAL,WARE_NM,DATE,IT_CODE,QTY,FRATE,PMKEY,IT_NAME,DC_NO,VNAME FROM  ##STKVAL1 WHERE VTYPE = 'AVG' ORDER BY VNAME,IT_CODE,WARE_NM,DATE,(CASE WHEN ENTRY_TY='OS' THEN 'A' ELSE (CASE WHEN PMKEY='+' THEN 'B' ELSE 'C'END) END),TRAN_CD,ITSERIAL ---Change by sandeep for bug-1724 on 31/12/12	   	--Bug20309		
	SELECT ENTRY_TY,TRAN_CD,ITSERIAL,WARE_NM,DATE,IT_CODE,QTY,FRATE,PMKEY,IT_NAME,DC_NO,VNAME FROM  ##STKVAL1 WHERE VTYPE = 'WEIGHTED AVERAGE' ORDER BY VNAME,IT_CODE,WARE_NM,DATE,(CASE WHEN ENTRY_TY='OS' THEN 'A' ELSE (CASE WHEN PMKEY='+' THEN 'B' ELSE 'C'END) END),TRAN_CD,ITSERIAL ---Change by Ruchit for Bug 28346 on 25/06/2016		
	OPEN STKVALCRSOR1
	FETCH NEXT FROM STKVALCRSOR1 INTO @ENTRY_TY,@TRAN_CD,@ITSERIAL,@WARE_NM,@DATE,@IT_CODE,@QTY,@RATE,@PMKEY,@IT_NAME,@DC_NO,@VNAME ---Change by sandeep for bug-1724 on 31/12/12	   		--Bug20309
	WHILE (@@FETCH_STATUS=0)
	BEGIN
		/*Added by Rup 08/02/2010 for L2S-23 QC Problem-->*/
		/*print '----------'
		print '@ENTRY_TY= '+@ENTRY_TY
		print @TRAN_CD
		print '@ITSERIAL'+@ITSERIAL
		print '@WARE_NM'+@WARE_NM
		print @DATE
		print @QTY
		print @RATE
		print @PMKEY
		print @IT_NAME
		print @IT_CODE
		print '@MIT_CODE ' +cast(@MIT_CODE as varchar)*/
	--IF (@MIT_CODE<>@IT_CODE) OR (@MWARE_NM<>@WARE_NM) OR (@MVNAME<>@VNAME) Bug22534
	IF (@MIT_CODE<>@IT_CODE)  OR (@MVNAME<>@VNAME) -- Bug22534
	BEGIN
		SET @MIT_CODE=@IT_CODE
		--SET @MWARE_NM=@WARE_NM Bug22534
		set @av_balqty=0
		set @av_balamt=0
		SET @MVNAME=@VNAME		--Bug20309
	END
	if @pmkey='+' /*and @rate<>0*/
	begin
		/*print '@av_balamt 1   '+cast(@av_balamt as varchar)
		print '@qty    '+cast(@qty as varchar)
		print '@rate    '+cast(@rate as varchar)*/
		set @av_balqty=@av_balqty+@qty
		set @av_balamt=@av_balamt+(@qty*@rate)
		/*print '@av_balqty    '+cast(@av_balqty as varchar)
		print '@av_balamt 2   '+cast(@av_balamt as varchar)*/
	end
	if @pmkey='-'
	begin
		if @av_balqty<>0
		begin
			/*print '===='
			print @av_balamt
			print @av_balqty*/
			set @rate=@av_balamt/@av_balqty
		end
		else
		begin
			set @rate=0
		end	
		set @av_balqty=@av_balqty-@qty
		set @av_balamt=@av_balamt-(@qty*@rate)
	end 
	INSERT INTO ##STKVALAVG
		(ENTRY_TY,TRAN_CD,ITSERIAL,WARE_NM,DATE,IT_CODE,QTY,RATE,PMKEY,CNT,IT_NAME,DC_NO,VNAME)		--Bug20309
		VALUES (@ENTRY_TY,@TRAN_CD,@ITSERIAL,@WARE_NM,@DATE,@IT_CODE,@QTY,@RATE,@PMKEY,@CNT,@IT_NAME,@DC_NO,@VNAME) ---Change by sandeep for bug-1724 on 31/12/12	   			--Bug20309

	/*<--Added by Rup 08/02/2010 for L2S-23 QC Problem*/
/*	print @mIT_CODE
--		SET @CNT=@CNT+1	
--		IF (@PMKEY='-')
--		BEGIN
--			SELECT @RATE=SUM(QTY*(CASE WHEN RATE IS NULL THEN 0 ELSE RATE END))/SUM((CASE WHEN QTY>0 THEN  QTY ELSE 1 END)) FROM ##STKVALAVG WHERE PMKEY='+' AND RATE>0 AND IT_CODE=@IT_CODE AND WARE_NM=@WARE_NM  
--			SET @RATE = CASE WHEN @RATE IS NULL THEN 0 ELSE @RATE END
--		END	
--			
--		INSERT INTO ##STKVALAVG
--		(ENTRY_TY,TRAN_CD,ITSERIAL,WARE_NM,DATE,IT_CODE,QTY,RATE,PMKEY,CNT,IT_NAME)
--		VALUES (@ENTRY_TY,@TRAN_CD,@ITSERIAL,@WARE_NM,@DATE,@IT_CODE,@QTY,@RATE,@PMKEY,@CNT,@IT_NAME)  L2S-23*/
		
		FETCH NEXT FROM STKVALCRSOR1 INTO @ENTRY_TY,@TRAN_CD,@ITSERIAL,@WARE_NM,@DATE,@IT_CODE,@QTY,@RATE,@PMKEY,@IT_NAME,@DC_NO,@VNAME ---Change by sandeep for bug-1724 on 31/12/12	   			--Bug20309
	END
	CLOSE STKVALCRSOR1
	DEALLOCATE STKVALCRSOR1
	
	INSERT INTO ##STKVAL 
--	(IT_CODE,IT_NAME,OPBAL,OPAMT,RQTY,RAMT,IQTY,IAMT,CLBAL,CLAMT,WARE_NM,VNAME)		--Added By Shrikant S. on 03/05/2012 for Bug-3900	--Bug20309 Bug22534
	(IT_CODE,IT_NAME,OPBAL,OPAMT,RQTY,RAMT,IQTY,IAMT,CLBAL,CLAMT,VNAME)		--Bug22534

--	(IT_CODE,IT_NAME,OPBAL,OPAMT,RQTY,RAMT,IQTY,IAMT,CLBAL,CLAMT)				--Commented By Shrikant S. on 03/05/2012 for Bug-3900

--	SELECT IT_CODE,IT_NAME
--	,OPBAL=SUM(CASE WHEN ENTRY_TY='OS' OR DATE<@SDATE THEN (CASE WHEN PMKEY='+' THEN QTY ELSE -QTY END) ELSE 0 	END )	    		
--	,OPAMT=SUM(CASE WHEN ENTRY_TY='OS' OR DATE<@SDATE THEN (CASE WHEN PMKEY='+' THEN QTY ELSE -QTY END)*RATE ELSE 0 END )
--	,RQTY=SUM(CASE WHEN (ENTRY_TY<>'OS' AND DATE>=@SDATE AND PMKEY='+') THEN QTY ELSE 0 END)
--	,RAMT=SUM(CASE WHEN (ENTRY_TY<>'OS' AND DATE>=@SDATE AND PMKEY='+') THEN QTY*RATE ELSE 0 END)
--	,IQTY=SUM(CASE WHEN (ENTRY_TY<>'OS' AND DATE>=@SDATE AND PMKEY='-') THEN QTY ELSE 0 END)
--	,IAMT=SUM(CASE WHEN (ENTRY_TY<>'OS' AND DATE>=@SDATE AND PMKEY='-') THEN QTY*RATE ELSE 0 END)
--	,CLBAL=SUM((CASE WHEN PMKEY='+' THEN QTY ELSE -QTY END) ) 
--	,CLAMT=SUM((CASE WHEN PMKEY='+' THEN QTY ELSE -QTY END)*RATE )
--	,WARE_NM																	--Added By Shrikant S. on 03/05/2012 for Bug-3900
--	 FROM  ##STKVALAVG GROUP BY IT_CODE,IT_NAME,WARE_NM ORDER BY WARE_NM,IT_NAME
	SELECT IT_CODE,IT_NAME
	,OPBAL=SUM(CASE WHEN ENTRY_TY='OS' OR DATE<@SDATE THEN (CASE WHEN PMKEY='+' THEN (CASE WHEN DC_NO='DI' THEN 0 ELSE QTY END ) ELSE -QTY END) ELSE 0 	END )--chnages by sandeep for bug-1724
	,OPAMT=SUM(CASE WHEN ENTRY_TY='OS' OR DATE<@SDATE THEN (CASE WHEN PMKEY='+' THEN QTY ELSE -QTY END)*RATE ELSE 0 END )
	,RQTY=SUM(CASE WHEN (ENTRY_TY<>'OS' AND DATE>=@SDATE AND PMKEY='+') THEN (CASE WHEN DC_NO='DI' THEN 0 ELSE QTY END ) ELSE 0 END) --chnages by sandeep for bug-1724
	--,RQTY=SUM(CASE WHEN (ENTRY_TY<>'OS' AND DATE>=@SDATE AND PMKEY='+') THEN QTY ELSE 0 END) --Commented
	,RAMT=SUM(CASE WHEN (ENTRY_TY<>'OS' AND DATE>=@SDATE AND PMKEY='+') THEN QTY*RATE ELSE 0 END)
	,IQTY=SUM(CASE WHEN (ENTRY_TY<>'OS' AND DATE>=@SDATE AND PMKEY='-') THEN QTY ELSE 0 END)
	,IAMT=SUM(CASE WHEN (ENTRY_TY<>'OS' AND DATE>=@SDATE AND PMKEY='-') THEN QTY*RATE ELSE 0 END)
	,CLBAL=SUM((CASE WHEN PMKEY='+' THEN (CASE WHEN DC_NO='DI' THEN 0 ELSE QTY END ) ELSE -QTY END) )  --chnages by sandeep for bug-1724
	,CLAMT=SUM((CASE WHEN PMKEY='+' THEN QTY ELSE -QTY END)*RATE )
	--,WARE_NM		Bug22534															--Added By Shrikant S. on 03/05/2012 for Bug-3900
	,VNAME	--Bug20309
	 FROM  ##STKVALAVG GROUP BY IT_CODE,IT_NAME,VNAME ORDER BY IT_NAME,VNAME	--Bug20309
		
	DROP TABLE ##STKVALAVG	--Bug20309	
--END		--Bug20309	

--Bug20309
--IF  CHARINDEX('ANS=NO', @EXPARA)<>0 /*Rup 29/12/2009*/
If @ShowNil like '%NO%'
--Bug20309
BEGIN
	print @EXPARA
	delete from ##STKVAL where clbal=0
END

SELECT A.VNAME,A.IT_CODE,A.IT_NAME,IT.RATEUNIT,IT.[GROUP],IT.TYPE,A.OPBAL,A.OPAMT,A.RQTY,A.RAMT,A.IQTY,A.IAMT,A.CLBAL,A.CLAMT,A.WARE_NM,Status=IsNull(A.STATUS,'') into #STKVAL FROM ##STKVAL A INNER JOIN IT_MAST IT ON  (A.IT_CODE=IT.IT_CODE) order by A.WARE_NM,A.IT_NAME		--Added By Shrikant S. on 03/05/2012 for Bug-3900	--Bug8025	--Bug20309
--SELECT A.IT_CODE,A.IT_NAME,IT.RATEUNIT,IT.[GROUP],IT.TYPE,A.OPBAL,A.OPAMT,A.RQTY,A.RAMT,A.IQTY,A.IAMT,A.CLBAL,A.CLAMT  FROM ##STKVAL A INNER JOIN IT_MAST IT ON  (A.IT_CODE=IT.IT_CODE) order by A.IT_NAME							--Commented By Shrikant S. on 03/05/2012 for Bug-3900

--Bug20309
If Not Exists(Select VName from ##STKVALConfig Where RecId > 1)
Begin
	Update #STKVAL Set VName = ''
End
DROP TABLE ##STKVAL
DROP TABLE ##STKVAL1
Drop Table ##STKVALConfig
SELECT * from #STKVAL 
	order by (case when Vname='' then 'A' else (case when Left(Vname,7)='GENERAL' then 'Y' else (case when Left(Vname,5)='OTHER' then 'Z' else 'D' end) end) end),
			VNAME,IT_NAME
--Bug20309

