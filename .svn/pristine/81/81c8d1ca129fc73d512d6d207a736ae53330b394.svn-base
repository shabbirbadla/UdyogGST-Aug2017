
/****** Object:  StoredProcedure [dbo].[USP_REP_LEDGER_ZOOM_MULTI_CURR]    Script Date: 11/25/2013 14:14:51 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[USP_REP_LEDGER_ZOOM_MULTI_CURR]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[USP_REP_LEDGER_ZOOM_MULTI_CURR]
GO

-- USE [A011112]
GO

/****** Object:  StoredProcedure [dbo].[USP_REP_LEDGER_ZOOM_MULTI_CURR]    Script Date: 11/25/2013 14:14:51 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		Dinesh Sh.
-- Create date: 25/11/2013
-- Description:	This is useful for zoom in ledger report in Multi Currency.
-- Modify date: 
-- Modified By: Birendra on 04/12/2013 for bug-20725
-- Remark:
-- =============================================
CREATE PROCEDURE [dbo].[USP_REP_LEDGER_ZOOM_MULTI_CURR]
	@TMPAC NVARCHAR(60),@TMPIT NVARCHAR(60),@SPLCOND NVARCHAR(500),
	@SDATE SMALLDATETIME,@EDATE SMALLDATETIME,
	@SNAME NVARCHAR(60),@ENAME NVARCHAR(60),
	@SITEM NVARCHAR(60),@EITEM NVARCHAR(60),
	@SAMT NUMERIC,@EAMT NUMERIC,
	@SDEPT NVARCHAR(60),@EDEPT NVARCHAR(60),
	@SCAT NVARCHAR(60),@ECAT NVARCHAR(60),
	@SWARE NVARCHAR(60),@EWARE NVARCHAR(60),
	@SINVSR NVARCHAR(60),@EINVSR NVARCHAR(60),
	@FINYR NVARCHAR(20),@EXTPAR NVARCHAR(60)
	AS
SET NOCOUNT ON
Declare @XTRAFLDS VARCHAR(8000)		
set @XTRAFLDS=''

Declare @FCON as NVARCHAR(4000),@SQLCOMMAND as NVARCHAR(4000)
	Declare @OPENTRIES as VARCHAR(50),@OPENTRY_TY as VARCHAR(50)
	Declare @TBLNM as VARCHAR(50),@TBLNAME1 as VARCHAR(50),@TBLNAME2 as VARCHAR(50)
	Declare @XTRAFLDS1 as VARCHAR(8000)	-- Added By Sachin N. S. on 30/08/2010 for TKT-3663
	
EXECUTE USP_REP_FILTCON 
	@VTMPAC=null,@VTMPIT=@TMPIT,@VSPLCOND=@SPLCOND,
	@VSDATE=null,@VEDATE=@EDATE,
--	@VSAC =@SNAME,@VEAC =null,
	@VSAC =@SNAME,@VEAC =@ENAME, --Birendra : Bug-20725 on 04/12/2013
	@VSIT='',@VEIT='',
	@VSAMT=null,@VEAMT=null,
	@VSDEPT=@SDEPT,@VEDEPT=@EDEPT,
	@VSCATE =@SCAT,@VECATE =@ECAT,
	@VSWARE =@SWARE,@VEWARE  =@EWARE,
	@VSINV_SR =@SINVSR,@VEINV_SR =@EINVSR,
	@VMAINFILE='MVW',@VITFILE='',@VACFILE='AVW',
	@VDTFLD = 'DATE',@VLYN=null,@VEXPARA=@EXTPAR,
	@VFCON =@FCON OUTPUT
--Print @FCON

	Set @TBLNM = (SELECT substring(rtrim(ltrim(str(RAND( (DATEPART(mm, GETDATE()) * 100000 )
					+ (DATEPART(ss, GETDATE()) * 1000 )
					+ DATEPART(ms, GETDATE())) , 20,15))),3,20) as No)
	Set @TBLNAME1 = '##TMP1'+@TBLNM
	Set @TBLNAME2 = '##TMP2'+@TBLNM
	SET @XTRAFLDS = ISNULL(@XTRAFLDS,'')	--CASE WHEN ISNULL(@XTRAFLDS,'')='' THEN '' ELSE ',' END+
	SET @XTRAFLDS1 = REPLACE(REPLACE(@XTRAFLDS,'MAIN','MVW'),'ACDET','AVW') 

	SET @SQLCOMMAND = ''
	SET @SQLCOMMAND = '	SELECT AVW.TRAN_CD,AVW.ENTRY_TY,AVW.DATE,AVW.ACSERIAL,AVW.FCAMOUNT,INV_NO=SPACE(30),MVW.INV_SR,MVW.U_PINVDT,U_PINVNO=SPACE(30)
	,AC_MAST.AC_ID,AC_MAST.AC_NAME,AVW.AMT_TY,AVW.FCID,CURR_MAST.CURRDESC,CURR_MAST.SYMBOL
	,BEH=(CASE WHEN LCODE.EXT_VOU=1 THEN LCODE.BCODE_NM ELSE LCODE.ENTRY_TY END)'+@XTRAFLDS1 +'
	INTO '+@TBLNAME1+' FROM LAC_MULTI_VW AVW (NOLOCK)
	INNER JOIN AC_MAST (NOLOCK) ON AVW.AC_ID = AC_MAST.AC_ID
	INNER JOIN CURR_MAST (NOLOCK) ON AVW.FCID = CURR_MAST.Currencyid
	INNER JOIN LMAIN_MULTI_VW MVW (NOLOCK) ON AVW.TRAN_CD = MVW.TRAN_CD AND AVW.ENTRY_TY = MVW.ENTRY_TY
	INNER JOIN LCODE (NOLOCK) ON AVW.ENTRY_TY = LCODE.ENTRY_TY
	WHERE 1=2 '
	EXECUTE SP_EXECUTESQL @SQLCOMMAND

	SET @SQLCOMMAND = 'INSERT INTO '+@TBLNAME1+' SELECT AVW.TRAN_CD,AVW.ENTRY_TY,AVW.DATE,AVW.ACSERIAL,AVW.FCAMOUNT,MVW.INV_NO,MVW.INV_SR,MVW.U_PINVDT,MVW.U_PINVNO
	,AC_MAST.AC_ID,AC_MAST.AC_NAME,AVW.AMT_TY,AVW.FCID,CURR_MAST.CURRDESC,CURR_MAST.SYMBOL
	,BEH=(CASE WHEN LCODE.EXT_VOU=1 THEN LCODE.BCODE_NM ELSE LCODE.ENTRY_TY END)'+@XTRAFLDS1+' 
		FROM LAC_MULTI_VW AVW (NOLOCK)
	INNER JOIN AC_MAST (NOLOCK) ON AVW.AC_ID = AC_MAST.AC_ID
	INNER JOIN CURR_MAST (NOLOCK) ON AVW.FCID = CURR_MAST.Currencyid
	INNER JOIN LMAIN_MULTI_VW MVW (NOLOCK) ON AVW.TRAN_CD = MVW.TRAN_CD AND AVW.ENTRY_TY = MVW.ENTRY_TY
	INNER JOIN LCODE (NOLOCK) ON AVW.ENTRY_TY = LCODE.ENTRY_TY'
--	print @SQLCOMMAND
	SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+' AND CURR_MAST.CURRDESC <> '+CHAR(39)+'INR'+CHAR(39)
	SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+@FCON 
--	PRINT @SQLCOMMAND
	EXECUTE SP_EXECUTESQL @SQLCOMMAND

	--SET @SQLCOMMAND='SELECT * FROM  '+@TBLNAME1
	--EXECUTE SP_EXECUTESQL @SQLCOMMAND
	--RETURN
	
	SET @SQLCOMMAND = 'SELECT TRAN_CD,ENTRY_TY,DATE,INV_NO,INV_SR,U_PINVDT,U_PINVNO,AC_ID,AC_NAME
			,AMT_TY,FCID,CURRDESC,SYMBOL
			,OPBAL=FCAMOUNT,DRAMT=FCAMOUNT,CRAMT=FCAMOUNT,BALAMT=FCAMOUNT
			,canexpand=cast(1 as bit),AccountName=AC_NAME,Entry=CAST(1 AS BIT)
	INTO '+@TBLNAME2+'
	FROM '+@TBLNAME1+' TVW WHERE 1=2'
	EXECUTE SP_EXECUTESQL @SQLCOMMAND

	SET @SQLCOMMAND = 'INSERT INTO '+@TBLNAME2+'
			(TRAN_CD,ENTRY_TY,DATE,INV_NO,INV_SR,U_PINVDT,U_PINVNO,AC_ID,AC_NAME
			,AMT_TY,FCID,CURRDESC,SYMBOL
			,OPBAL,DRAMT,CRAMT,BALAMT
			,canexpand,AccountName,Entry) 
	SELECT 
	TRAN_CD=0,ENTRY_TY=''OB'',DATE='+CHAR(39)+CAST(@SDATE AS VARCHAR(20))+CHAR(39)+',INV_NO='' '',INV_SR='' ''
	,U_PINV_DT=0,U_PINV_NO='' '',TVW.AC_ID,''Balance B/f''
	,AMT_TY	= CASE WHEN IsNull(sum(CASE WHEN TVW.AMT_TY = ''DR'' THEN TVW.FCAMOUNT ELSE -TVW.FCAMOUNT END),0)>0 THEN ''DR'' ELSE ''CR'' END
	,TVW.FCID,TVW.CURRDESC,TVW.SYMBOL
	,OPBAL=IsNull(sum(CASE WHEN TVW.AMT_TY = ''DR'' THEN TVW.FCAMOUNT ELSE -TVW.FCAMOUNT END),0)
	,0,0
	,BALQTY=IsNull(sum(CASE WHEN TVW.AMT_TY = ''DR'' THEN TVW.FCAMOUNT ELSE -TVW.FCAMOUNT END),0)
	,canexpand=0,AccountName=''Balance B/f'',Entry=0
	FROM  '+@TBLNAME1+' TVW
	WHERE ((TVW.DATE < '+CHAR(39)+CAST(@SDATE AS VARCHAR(20))+CHAR(39)+') OR TVW.BEH IN (''OB'')) 	
	GROUP BY TVW.AC_ID,TVW.AC_NAME,TVW.FCID,TVW.CURRDESC,TVW.SYMBOL '
	--PRINT @SQLCOMMAND
	EXECUTE SP_EXECUTESQL @SQLCOMMAND

	SET @SQLCOMMAND='DELETE FROM  '+@TBLNAME2+' WHERE OPBAL=0'
	EXECUTE SP_EXECUTESQL @SQLCOMMAND

	--SET @SQLCOMMAND='SELECT * FROM  '+@TBLNAME2
	--EXECUTE SP_EXECUTESQL @SQLCOMMAND
	--RETURN
	

	DECLARE @TRAN_CD INT,@ENTRY_TY CHAR(2),@DATE SMALLDATETIME,@AMT NUMERIC(16,3),
			@INV_NO VARCHAR(30),@INV_SR VARCHAR(30),@U_PINVDT SMALLDATETIME,@U_PINVNO VARCHAR(30),@AC_ID INT,@AC_NAME VARCHAR(100),@AMT_TY VARCHAR(5),
			@FCID INT, @CURRDESC VARCHAR(100),@SYMBOL VARCHAR(5)	

	DECLARE @OPBAL NUMERIC(16,3),@DRAMT NUMERIC(16,3),@CRAMT NUMERIC(16,3),@BALQTY NUMERIC(16,3)
	DECLARE @OPBAL1 NUMERIC(16,3)
	
	DECLARE @canexpand BIT,@AccountName VARCHAR(50),@Entry BIT , @OLD_FCID INT
	SET @canexpand=0
	SET @Entry=1
	SET @OLD_FCID=0
	
-->> commented for curr. wise opening
	--SET @OPBAL=0
	--SET @SQLCOMMAND = 'SELECT @OPBAL=ISNULL(OPBAL,0) FROM '+@TBLNAME2
	--EXECUTE SP_EXECUTESQL @SQLCOMMAND,N'@OPBAL NUMERIC(16,3) OUT',@OPBAL1 OUT
	--set @OPBAL=@OPBAL+ISNULL(@OPBAL1,0)

	SET @SQLCOMMAND = 'DECLARE CUR_STKLAN CURSOR FOR 
	SELECT TVW.TRAN_CD,TVW.ENTRY_TY,TVW.DATE
	,FCAMOUNT=SUM(TVW.FCAMOUNT)
	,TVW.INV_NO,TVW.INV_SR,TVW.U_PINVDT,TVW.U_PINVNO,TVW.AC_ID,TVW.AC_NAME,TVW.AMT_TY
	,TVW.FCID,TVW.CURRDESC,TVW.SYMBOL
	FROM '+@TBLNAME1+' TVW
	WHERE ((TVW.DATE BETWEEN '+CHAR(39)+CAST(@SDATE AS VARCHAR(20))+CHAR(39)+' AND '+CHAR(39)+CAST(@EDATE AS VARCHAR(20))+CHAR(39)+') AND TVW.ENTRY_TY NOT IN (''OB'')) 
	GROUP BY TVW.TRAN_CD,TVW.ENTRY_TY,TVW.DATE,TVW.INV_NO,TVW.INV_SR,TVW.U_PINVDT,TVW.U_PINVNO,TVW.AC_ID,TVW.AC_NAME,TVW.AMT_TY
	,TVW.FCID,TVW.CURRDESC,TVW.SYMBOL
	ORDER BY TVW.AC_ID,TVW.FCID,TVW.DATE,TVW.INV_SR,TVW.INV_NO'
	--print @SQLCOMMAND
	EXECUTE SP_EXECUTESQL @SQLCOMMAND

	OPEN CUR_STKLAN
	FETCH NEXT FROM CUR_STKLAN INTO @TRAN_CD,@ENTRY_TY,@DATE,@AMT,@INV_NO,@INV_SR,@U_PINVDT,@U_PINVNO,@AC_ID,@AC_NAME,@AMT_TY,@FCID,@CURRDESC,@SYMBOL
-->> opening calculation start
	WHILE (@@FETCH_STATUS=0)
	BEGIN
		SET @DRAMT=0
		SET @CRAMT=0

		IF (@AMT_TY='DR')
		BEGIN
			SET @DRAMT=@AMT
		END	
			ELSE 
		BEGIN
			SET @CRAMT=@AMT
		END

-->> for curr wise opening
		IF @OLD_FCID <> @FCID
		BEGIN 
			SET @OLD_FCID = @FCID

			SET @OPBAL=0
			SET @SQLCOMMAND = 'SELECT @OPBAL=ISNULL(OPBAL,0) FROM '+@TBLNAME2+' WHERE FCID= '+CAST(@FCID AS VARCHAR(10))
			EXECUTE SP_EXECUTESQL @SQLCOMMAND,N'@OPBAL NUMERIC(16,3) OUT',@OPBAL1 OUT
			SET @OPBAL=@OPBAL+ISNULL(@OPBAL1,0)
		END
	
-->> WORKING FOR ACCOUNT NAME
		set @AccountName = (SELECT TOP 1 AC_NAME FROM LAC_MULTI_VW WHERE TRAN_CD=@TRAN_CD AND ENTRY_TY=@ENTRY_TY AND AMT_TY<>@AMT_TY AND AC_ID<>@AC_ID ORDER BY ACSERIAL)

-->> UPDATING FINAL CURSOR
		SET @BALQTY=@OPBAL+@DRAMT-@CRAMT
		SET @SQLCOMMAND = 'INSERT INTO '+@TBLNAME2+'
			(TRAN_CD,ENTRY_TY,DATE,INV_NO,INV_SR,U_PINVDT,U_PINVNO,AC_ID,AC_NAME
			,AMT_TY,FCID,CURRDESC,SYMBOL,OPBAL,DRAMT,CRAMT,BALAMT
			,canexpand,AccountName,Entry) 
		VALUES (@TRAN_CD,@ENTRY_TY,@DATE,@INV_NO,@INV_SR,@U_PINVDT,@U_PINVNO,@AC_ID,@AC_NAME
			,@AMT_TY,@FCID,@CURRDESC,@SYMBOL,@OPBAL,@DRAMT,@CRAMT,@BALQTY
			,@canexpand,@AccountName,@Entry) '
		
			
		EXECUTE SP_EXECUTESQL @SQLCOMMAND,N'@TRAN_CD INT,@ENTRY_TY CHAR(2),@DATE SMALLDATETIME,@AMT NUMERIC(16,3),
				@INV_NO VARCHAR(30),@INV_SR VARCHAR(30),@U_PINVDT SMALLDATETIME,@U_PINVNO VARCHAR(30),@AC_ID INT ,@AC_NAME VARCHAR(100) ,@AMT_TY CHAR(5),
				@FCID INT ,@CURRDESC VARCHAR(10) ,@SYMBOL VARCHAR(5),@OPBAL NUMERIC(16,3),@DRAMT NUMERIC(16,3),
				@CRAMT NUMERIC(16,3),@BALQTY NUMERIC(16,3)
				,@canexpand Bit,@AccountName VARCHAR(50),@Entry bit',@TRAN_CD,@ENTRY_TY,@DATE,@AMT
				,@INV_NO,@INV_SR,@U_PINVDT,@U_PINVNO,@AC_ID,@AC_NAME,@AMT_TY
				,@FCID ,@CURRDESC ,@SYMBOL ,@OPBAL ,@DRAMT ,@CRAMT ,@BALQTY
				,@canexpand,@AccountName,@Entry

		SET @OPBAL=@BALQTY
		FETCH NEXT FROM CUR_STKLAN INTO @TRAN_CD,@ENTRY_TY,@DATE,@AMT,@INV_NO,@INV_SR,@U_PINVDT,@U_PINVNO,@AC_ID,@AC_NAME,@AMT_TY,@FCID,@CURRDESC,@SYMBOL	
	END	
	CLOSE CUR_STKLAN
	DEALLOCATE CUR_STKLAN	

	--SET @SQLCOMMAND='SELECT * FROM  '+@TBLNAME2
	--EXECUTE SP_EXECUTESQL @SQLCOMMAND
	--RETURN

	SET @SQLCOMMAND='ALTER TABLE '+@TBLNAME2+' ADD ClosingTyp VARCHAR(5) '
	EXECUTE SP_EXECUTESQL @SQLCOMMAND
	
	SET @SQLCOMMAND='UPDATE '+@TBLNAME2+' SET ClosingTyp = CASE WHEN BALAMT>0 THEN ''DR'' ELSE ''CR'' END 
	,OPBAL=ABS(OPBAL) ,DRAMT=ABS(DRAMT) ,CRAMT=ABS(CRAMT) ,BALAMT=ABS(BALAMT)'
	EXECUTE SP_EXECUTESQL @SQLCOMMAND
	
	SET @XTRAFLDS1 = REPLACE(REPLACE(REPLACE(REPLACE(@XTRAFLDS,'MVW','AVW'),'IVW','AVW'),'AC_MAST','AVW'),'IT_MAST','AVW')
	SET @SQLCOMMAND = 'SELECT TVW.*'+@XTRAFLDS1+'
	,Headrep1 = '+'''General Ledger(Multi Currency) FOR PERIOD ' 
	+REPLICATE('0',2-LEN(DAY(@SDATE)))+CAST(DAY(@SDATE) AS VARCHAR)+'/'
	+REPLICATE('0',2-LEN(MONTH(@SDATE)))+CAST(MONTH(@SDATE) AS VARCHAR)+'/'+CAST(YEAR(@SDATE) AS VARCHAR)
	+' - '
	+REPLICATE('0',2-LEN(DAY(@EDATE)))+CAST(DAY(@EDATE) AS VARCHAR)+'/'
	+REPLICATE('0',2-LEN(MONTH(@EDATE)))+CAST(MONTH(@EDATE) AS VARCHAR)+'/'+CAST(YEAR(@EDATE) AS VARCHAR)+CHAR(39)
	+' ,canexpand=cast(1 as bit),AccountName='' '' ,Entry=CAST(1 AS BIT)
	FROM '+@TBLNAME2+' TVW
	LEFT JOIN '+@TBLNAME1+' AVW ON TVW.ENTRY_TY = AVW.ENTRY_TY AND TVW.TRAN_CD=AVW.TRAN_CD AND TVW.AC_ID=AVW.AC_ID
	ORDER BY TVW.AC_ID,TVW.FCID,TVW.DATE,TVW.AMT_TY,TVW.INV_SR,TVW.INV_NO'
	 PRINT @SQLCOMMAND
	EXECUTE SP_EXECUTESQL @SQLCOMMAND


--DROP TABLE #TITEM1
--DROP TABLE #TITEM2
/*
EXECUTE [USP_REP_LEDGER_ZOOM_MULTI_CURR] '','','','04/01/2013','03/31/2014','PENTA CHEM (M.E.) FZE','','','',0,99999999999.99,'','SALE DEPARTMENT     ','','STAFF               ','','','','X-1/EXPORT          ','2013-2014',''

*/
SET NOCOUNT OFF

SET @SQLCOMMAND = 'DROP TABLE '+@TBLNAME1
EXECUTE SP_EXECUTESQL @SQLCOMMAND
SET @SQLCOMMAND = 'DROP TABLE '+@TBLNAME2
EXECUTE SP_EXECUTESQL @SQLCOMMAND

GO
-- EXECUTE [USP_REP_LEDGER_ZOOM_MULTI_CURR] '','','','04/01/2013','03/31/2014','PENTA CHEM (M.E.) FZE-DRS.','PENTA CHEM (M.E.) FZE-DRS.','','',0,99999999999.99,'','SALE DEPARTMENT','','STAFF','','','','X-1/EXPORT','2013-2014',''
-- EXECUTE [USP_REP_LEDGER_ZOOM_MULTI_CURR]'','','','04/01/2013','03/31/2014','PENTA CHEM (M.E.) FZE-DRS.                        ','','','',0,0,'','','','','','','','X-1/EXPORT          ','2013-2014',''
-- EXECUTE [USP_REP_LEDGER_ZOOM_MULTI_CURR]'','','','04/01/2012','03/31/2013','PENTA CHEM (M.E.) FZE-DRS.                        ','','','',0,0,'','','','','','','','X-1/EXPORT          ','2013-2014',''
--EXECUTE [USP_REP_LEDGER_ZOOM_MULTI_CURR]'','','','04/01/2012','03/31/2013','PENTA CHEM (M.E.) FZE                             ','','','',0,0,'','','','','','','','X-1/EXPORT          ','2012-2013',''
