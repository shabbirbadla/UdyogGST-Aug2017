If Exists(Select [name] From SysObjects Where xType='P' and [name]='USP_REP_OUTSTNDG_COLLECTION_DR')
Begin
	Drop Procedure USP_REP_OUTSTNDG_COLLECTION_DR
End
Go

create PROCEDURE [dbo].[USP_REP_OUTSTNDG_COLLECTION_DR]
@SDATE  SMALLDATETIME
,@SAC AS VARCHAR(60),@EAC AS VARCHAR(60)
-- Modified	: Shrikant S. on 21/04/2017 for GST	--Changed the columns U_PINVNO,U_PINVDT to PINVNO,PINVDT resp.			
AS


Declare @SQLCOMMAND as NVARCHAR(4000)
Declare @OPENTRIES as VARCHAR(50),@OPENTRY_TY as VARCHAR(50)
Declare @TBLNM as VARCHAR(50),@TBLNAME1 as VARCHAR(50),@TBLNAME2 as VARCHAR(50),@TBLNAME3 as VARCHAR(50),@TBLNAME11 as VARCHAR(50),@TBLNAME12 as VARCHAR(50)
DECLARE @GRPID AS INT,@MCOND AS BIT,@LVL  AS INT,@GRP AS VARCHAR(100)


Set @OPENTRY_TY = CHAR(39)+'OB'+CHAR(39)


Set @TBLNM = (SELECT substring(rtrim(ltrim(str(RAND( (DATEPART(mm, GETDATE()) * 100000 )
				+ (DATEPART(ss, GETDATE()) * 1000 )
				+ DATEPART(ms, GETDATE())) , 20,15))),3,20) as No)

print @TBLNM
Set @TBLNAME1 = '##TMP1'+@TBLNM
Set @TBLNAME2 = '##TMP2'+@TBLNM
Set @TBLNAME3 = '##TMP3'+@TBLNM
Set @TBLNAME11 = '##TMP11'+@TBLNM
Set @TBLNAME12 = '##TMP12'+@TBLNM

Select @OPENTRY_TY=@OPENTRY_TY+isnull(substring((Select ', '+CHAR(39)+Entry_ty+CHAR(39) From Lcode Where Bcode_nm='OB' For XML Path('')),1,500),'')
SET @GRP='SUNDRY DEBTORS'

CREATE TABLE #ACGRPID (GACID DECIMAL(9),LVL DECIMAL(9))
SET @LVL=0
INSERT INTO #ACGRPID SELECT AC_GROUP_ID,@LVL  FROM AC_GROUP_MAST WHERE AC_GROUP_NAME=@GRP
SET @MCOND=1
WHILE @MCOND=1
BEGIN
	IF EXISTS (SELECT AC_GROUP_ID FROM AC_GROUP_MAST WHERE GAC_ID IN (SELECT DISTINCT GACID  FROM #ACGRPID WHERE LVL=@LVL)) --WHERE LVL=@LVL
	BEGIN
		PRINT @LVL
		INSERT INTO #ACGRPID SELECT AC_GROUP_ID,@LVL+1 FROM AC_GROUP_MAST WHERE GAC_ID IN (SELECT DISTINCT GACID  FROM #ACGRPID WHERE LVL=@LVL)
		SET @LVL=@LVL+1
	END
	ELSE
	BEGIN
		SET @MCOND=0	
	END
END
SELECT AC_ID,AC_NAME INTO #ACMAST FROM AC_MAST WHERE  AC_GROUP_ID IN (SELECT DISTINCT GACID FROM #ACGRPID)

SET @SQLCOMMAND=' '
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+'SELECT AC_MAST.AC_NAME,AC.AC_ID,AC.AMOUNT,AC.AMT_TY,AC.ACSERIAL,MN.ENTRY_TY,MN.DATE,MN.TRAN_CD,MN.L_YN,MN.INV_NO,MN.DUE_DT,MN.PINVNO AS U_PINVNO,MN.PINVDT AS U_PINVDT,NARR=CONVERT(VARCHAR(2000),MN.NARR),MN.SALESMAN'
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+',BILLAMT=AC.AMOUNT '
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+',RECAMT=SUM(case when (AC.entry_ty=MLL.entry_all and AC.tran_cd =MLL.main_tran and AC.acserial =MLL.acseri_all and AC.AC_ID=MLL.AC_ID) then ISNULL(MLL.NEW_ALL,0)+ISNULL(MLL.TDS,0)+ISNULL(MLL.DISC,0) else 0 end)'
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+' INTO '+@TBLNAME1
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+' FROM LAC_VW AC '
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+' INNER JOIN AC_MAST  ON (AC_MAST.AC_ID=AC.AC_ID)'
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+' INNER JOIN LMAIN_VW MN ON (AC.ENTRY_TY=MN.ENTRY_TY AND AC.TRAN_CD=MN.TRAN_CD)'
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+' LEFT JOIN MAINALL_VW MLL ON (AC.entry_ty=MLL.entry_all and AC.tran_cd =MLL.main_tran and AC.acserial =MLL.acseri_all and AC.AC_ID=MLL.AC_ID) AND MLL.DATE <= '+CHAR(39)+CAST(@SDATE AS VARCHAR)+CHAR(39)
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+' INNER JOIN #ACMAST AM ON (AC_MAST.AC_ID=AM.AC_ID)'
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+' WHERE MN.DATE <='+CHAR(39)+CONVERT(VARCHAR(50),@SDATE)+CHAR(39)
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+' AND AC.AC_NAME BETWEEN '+CHAR(39)+@SAC+CHAR(39)+' AND '+ CHAR(39)+@EAC+CHAR(39)
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' AND MN.TDSPAYTYPE<>3' 
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+'GROUP BY AC_MAST.AC_NAME,AC.AC_ID,AC.AMOUNT,AC.AMT_TY,MN.ENTRY_TY,MN.DATE,MN.TRAN_CD,MN.L_YN,MN.INV_NO,MN.DUE_DT,MN.PINVNO,MN.PINVDT,AC.RE_ALL,AC.TDS,AC.ACSERIAL,CONVERT(VARCHAR(2000),MN.NARR),MN.SALESMAN'
PRINT @SQLCOMMAND
EXECUTE SP_EXECUTESQL @SQLCOMMAND


SET @SQLCOMMAND=' '
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+'SELECT AC_MAST.AC_NAME,AC.AC_ID,AC.AMOUNT,AC.AMT_TY,AC.ACSERIAL,MN.ENTRY_TY,MN.DATE,MN.TRAN_CD,MN.L_YN,MN.INV_NO,MN.DUE_DT,MN.PINVNO AS U_PINVNO,MN.PINVDT AS U_PINVDT,NARR=CONVERT(VARCHAR(2000),MN.NARR),MN.SALESMAN'
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+',BILLAMT=AC.AMOUNT '
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+',RECAMT=sum(case when (AC.entry_ty=MLY.entry_ty and AC.tran_cd =MLY.tran_cd and ac.acserial = Mly.acserial and AC.AC_ID=MLY.AC_ID) then case when ISNULL(MLY.NEW_ALL,0) = 0 then ISNULL(MLY.TDS,0)+ISNULL(MLY.DISC,0) else ISNULL(MLY.NEW_ALL,0)+ISNULL(MLY.TDS,0)+ISNULL(MLY.DISC,0) end else 0 end)'
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+' INTO '+@TBLNAME2
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+' FROM LAC_VW AC '
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+' INNER JOIN AC_MAST  ON (AC_MAST.AC_ID=AC.AC_ID)'
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+' INNER JOIN LMAIN_VW MN ON (AC.ENTRY_TY=MN.ENTRY_TY AND AC.TRAN_CD=MN.TRAN_CD)'
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+' LEFT JOIN MAINALL_VW MLY ON (AC.entry_ty=MLY.entry_ty and AC.tran_cd =MLY.tran_cd and ac.acserial = Mly.acserial and AC.AC_ID=MLY.AC_ID) AND MLY.DATE_ALL <= '+CHAR(39)+CAST(@SDATE AS VARCHAR)+CHAR(39)
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+' INNER JOIN #ACMAST AM ON (AC_MAST.AC_ID=AM.AC_ID)'
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+' WHERE MN.DATE <='+CHAR(39)+CONVERT(VARCHAR(50),@SDATE)+CHAR(39)
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+' AND AC.AC_NAME BETWEEN '+CHAR(39)+@SAC+CHAR(39)+' AND '+ CHAR(39)+@EAC+CHAR(39)
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' AND MN.TDSPAYTYPE<>3' 
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+'GROUP BY AC_MAST.AC_NAME,AC.AC_ID,AC.AMOUNT,AC.AMT_TY,MN.ENTRY_TY,MN.DATE,MN.TRAN_CD,MN.L_YN,MN.INV_NO,MN.DUE_DT,MN.PINVNO,MN.PINVDT,AC.RE_ALL,AC.TDS,AC.ACSERIAL,CONVERT(VARCHAR(2000),MN.NARR),MN.SALESMAN'
PRINT @SQLCOMMAND
EXECUTE SP_EXECUTESQL @SQLCOMMAND

SET @SQLCOMMAND=' '
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+'SELECT AC.ENTRY_TY,AC.TRAN_CD,AC.AC_ID,AC.ACSERIAL'
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+',RECAMT=AMOUNT'
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+' INTO '+@TBLNAME11
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+' FROM LAC_VW AC '
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+' WHERE RE_ALL = 0 AND TDS != 0 '
PRINT @SQLCOMMAND
EXECUTE SP_EXECUTESQL @SQLCOMMAND

SET @SQLCOMMAND=' '
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+'SELECT A.AC_NAME,A.AC_ID,A.AMOUNT,A.AMT_TY,A.ACSERIAL,A.ENTRY_TY,A.DATE,A.TRAN_CD,A.L_YN,A.INV_NO,A.DUE_DT,A.U_PINVNO,A.U_PINVDT,A.NARR,A.SALESMAN'
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+',A.BILLAMT,RECAMT=A.RECAMT+ISNULL(B.RECAMT,0) '
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+',BALAMT=A.BILLAMT-(A.RECAMT+ISNULL(B.RECAMT,0))'
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+' INTO '+@TBLNAME12
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+' FROM '+@TBLNAME1+' A '
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+' INNER JOIN '+@TBLNAME2+' B ON (A.ENTRY_TY=B.ENTRY_TY AND A.TRAN_CD=B.TRAN_CD AND A.ACSERIAL=B.ACSERIAL) AND A.AC_ID = B.AC_ID '
PRINT @SQLCOMMAND
EXECUTE SP_EXECUTESQL @SQLCOMMAND

SET @SQLCOMMAND = ''
SET @SQLCOMMAND = 'DECLARE @OPTRAN_CD as INT,@OPDATE as DATETIME,@OPACNAME as varchar(250) DECLARE openingentry_cursor CURSOR FOR
	SELECT TRAN_CD,AC_NAME,DATE FROM '+@TBLNAME12+' WHERE 
	ENTRY_TY IN ('+@OPENTRY_TY+') 
	OPEN openingentry_cursor
	FETCH NEXT FROM openingentry_cursor into @OPTRAN_CD,@OPACNAME,@OPDATE
	WHILE @@FETCH_STATUS = 0
	BEGIN
	   DELETE FROM '+@TBLNAME12+' WHERE ENTRY_TY IN ('+@OPENTRY_TY+') AND TRAN_CD = @OPTRAN_CD
			AND AC_NAME IN (SELECT AC_NAME FROM '+@TBLNAME12+' WHERE AC_NAME = @OPACNAME AND DATE < @OPDATE )
	   FETCH NEXT FROM openingentry_cursor into @OPTRAN_CD,@OPACNAME,@OPDATE
	END
CLOSE openingentry_cursor
DEALLOCATE openingentry_cursor'
EXECUTE SP_EXECUTESQL @SQLCOMMAND

SET @SQLCOMMAND='UPDATE '+@TBLNAME12+' SET BILLAMT=CASE WHEN AMT_TY=''DR'' THEN BILLAMT ELSE 0 END,RECAMT=CASE WHEN AMT_TY=''DR'' THEN RECAMT ELSE BILLAMT-RECAMT END
,BALAMT=CASE WHEN AMT_TY=''DR'' THEN (CASE WHEN AMT_TY=''DR'' THEN BILLAMT ELSE 0 END)-(CASE WHEN AMT_TY=''DR'' THEN RECAMT ELSE BILLAMT-RECAMT END) ELSE -(CASE WHEN AMT_TY=''DR'' THEN RECAMT ELSE BILLAMT-RECAMT END) END '
EXECUTE SP_EXECUTESQL @SQLCOMMAND

SET @SQLCOMMAND=' '
SET @SQLCOMMAND = ' SELECT [Entry Type]=a.Entry_ty,[Party Name]=A.Ac_Name,[Invoice No.]=A.Inv_no,A.Date,[Bill No.]=a.u_pinvno,[Bill Date]=a.u_pinvdt,[Bill Amt.]=A.billamt,[Payment]=A.Recamt,[Balance]=a.balamt,[Type]=a.amt_ty,b.contact,b.phone,b.area,[Sales Man]=a.Salesman,[Narration]=a.narr,remark=Case when a.billamt<>a.balamt then ''Amounnt is partially allocated'' else '''' end,Main_Tran=a.Tran_cd,A.Ac_id   FROM '+@TBLNAME12+' A INNER JOIN AC_MAST B ON (B.AC_ID=A.AC_ID) WHERE BALAMT <> 0 ORDER BY INV_NO'
--SET @SQLCOMMAND = ' SELECT a.*,remark=Case when a.billamt<>a.balamt then ''Amounnt is partially allocated'' else '''' end,b.contact,b.phone,b.area FROM '+@TBLNAME12+' a INNER JOIN AC_MAST B ON (B.AC_ID=A.AC_ID) WHERE BALAMT <> 0 ORDER BY INV_NO'
EXECUTE SP_EXECUTESQL @SQLCOMMAND


SET @SQLCOMMAND = ' DROP TABLE '+@TBLNAME12
EXECUTE SP_EXECUTESQL @SQLCOMMAND

SET @SQLCOMMAND = ' DROP TABLE '+@TBLNAME11
EXECUTE SP_EXECUTESQL @SQLCOMMAND

SET @SQLCOMMAND = ' DROP TABLE '+@TBLNAME1
EXECUTE SP_EXECUTESQL @SQLCOMMAND

SET @SQLCOMMAND = ' DROP TABLE '+@TBLNAME2
EXECUTE SP_EXECUTESQL @SQLCOMMAND




