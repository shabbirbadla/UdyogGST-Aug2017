If exists (select [name] from sysobjects where [name]='USP_MRP_GET_PEND_WO' and xtype='P')
drop procedure USP_MRP_GET_PEND_WO
GO

Create PROCEDURE USP_MRP_GET_PEND_WO
--@mIt_code Numeric(10)
AS
Set nocount on
declare @QTY DECIMAL(12,2),@WARE_NM VARCHAR(50),@TRAN_CD INT,@CNT INT,@BOMID VARCHAR(6),@WARE_NM1 VARCHAR(50),@AQTY DECIMAL(12,2),@BATCHNO varchar(10)
declare @QTY1 DECIMAL(12,2),@FGQTY DECIMAL(12,2),@IT_CODE INT,@RMITEMID DECIMAL(18,0),@RMQTY DECIMAL(16,3),@ENTRY_TY VARCHAR(2),@TRAN_CD1 INT,@IT_CODE1 INT
BEGIN

SELECT IT_CODE,QTY,QTY AS REQTY,WARE_NM  INTO #ITEM1 FROM ITEM WHERE 1=2

DECLARE ITEM2 CURSOR FOR SELECT  QTY,WARE_NM,TRAN_CD,BOMID,IT_CODE,BATCHNO FROM ITEM where qty<>re_qty and qty<>trm_qty
OPEN ITEM2
SET @CNT=0
FETCH NEXT FROM ITEM2 INTO @QTY,@WARE_NM,@TRAN_CD,@BOMID,@IT_CODE1,@BATCHNO
	WHILE @@FETCH_STATUS=0
		BEGIN
					BEGIN
							DECLARE BOMDET1 CURSOR FOR SELECT A.RMITEMID,A.RMQTY,B.FGQTY FROM BOMDET A INNER JOIN BOMHEAD B ON(A.BOMID=B.BOMID) WHERE A.BOMID=@BOMID
							OPEN BOMDET1
							FETCH NEXT FROM BOMDET1 INTO @RMITEMID,@RMQTY,@FGQTY
								WHILE @@FETCH_STATUS=0
									BEGIN
										INSERT INTO #ITEM1 VALUES(@RMITEMID,0,@QTY*@RMQTY/@FGQTY,@WARE_NM)
										FETCH NEXT FROM BOMDET1 INTO @RMITEMID,@RMQTY,@FGQTY
									END
						CLOSE BOMDET1
						DEALLOCATE BOMDET1
					END
			DECLARE ITEM3 CURSOR FOR SELECT  ENTRY_TY,TRAN_CD,IT_CODE,QTY,AQTY,BATCHNO FROM PROJECTITREF WHERE ATRAN_CD =@TRAN_CD AND AIT_CODE=@IT_CODE1 AND BATCHNO=@BATCHNO
			OPEN ITEM3
			FETCH NEXT FROM ITEM3 INTO @ENTRY_TY,@TRAN_CD,@IT_CODE,@QTY,@AQTY,@BATCHNO
					WHILE @@FETCH_STATUS=0
						BEGIN

							INSERT INTO #ITEM1 VALUES(@IT_CODE,@QTY,0,@WARE_NM)
							FETCH NEXT FROM ITEM3 INTO @ENTRY_TY,@TRAN_CD,@IT_CODE,@QTY,@AQTY,@BATCHNO
							PRINT @CNT

						END

		CLOSE ITEM3
		DEALLOCATE ITEM3
		SET @CNT=0
		FETCH NEXT FROM ITEM2 INTO @QTY,@WARE_NM,@TRAN_CD,@BOMID,@IT_CODE1,@BATCHNO
		END
		CLOSE ITEM2
		DEALLOCATE ITEM2
SELECT IT_CODE,sum(REQTY-QTY)AS QTY,WARE_NM FROM #ITEM1 GROUP BY IT_CODE,WARE_NM


----SELECT IT_CODE,QTY,QTY AS REQTY,WARE_NM  INTO #ITEM1 FROM ITEM WHERE 1=2

----	DECLARE ITEM2 CURSOR FOR SELECT  QTY,WARE_NM,TRAN_CD,BOMID,IT_CODE,BATCHNO FROM ITEM Where It_code=@mIt_code and qty<>re_qty and qty<>trm_qty
----	OPEN ITEM2
----	SET @CNT=0
----	FETCH NEXT FROM ITEM2 INTO @QTY,@WARE_NM,@TRAN_CD,@BOMID,@IT_CODE1,@BATCHNO
----	WHILE @@FETCH_STATUS=0
----	BEGIN
----		INSERT INTO #ITEM1 VALUES(@IT_CODE1,0,@QTY,@WARE_NM)
		
----		--BEGIN
----		--	DECLARE BOMDET1 CURSOR FOR 
----		--	SELECT A.RMITEMID,A.RMQTY,B.FGQTY FROM BOMDET A INNER JOIN BOMHEAD B ON(A.BOMID=B.BOMID AND A.BOMLEVEL=B.BOMLEVEL) WHERE A.BOMID=@BOMID AND A.BOMLEVEL=0 
----		--	OPEN BOMDET1
----		--	FETCH NEXT FROM BOMDET1 INTO @RMITEMID,@RMQTY,@FGQTY
----		--	WHILE @@FETCH_STATUS=0
----		--	BEGIN
----		--		INSERT INTO #ITEM1 VALUES(@RMITEMID,0,@QTY*@RMQTY/@FGQTY,@WARE_NM)
----		--		FETCH NEXT FROM BOMDET1 INTO @RMITEMID,@RMQTY,@FGQTY
----		--	END
----		--	CLOSE BOMDET1
----		--	DEALLOCATE BOMDET1
----		--END
----		DECLARE ITEM3 CURSOR FOR SELECT  ENTRY_TY,TRAN_CD,IT_CODE,QTY,AQTY FROM PROJECTITREF WHERE ATRAN_CD =@TRAN_CD AND AIT_CODE=@IT_CODE1 AND BATCHNO=@BATCHNO
----		OPEN ITEM3
----		FETCH NEXT FROM ITEM3 INTO @ENTRY_TY,@TRAN_CD,@IT_CODE,@QTY,@AQTY
----		WHILE @@FETCH_STATUS=0
----		BEGIN
----			INSERT INTO #ITEM1 VALUES(@IT_CODE,@QTY,0,@WARE_NM)
----			FETCH NEXT FROM ITEM3 INTO @ENTRY_TY,@TRAN_CD,@IT_CODE,@QTY,@AQTY
------			PRINT @CNT
----		END
----		CLOSE ITEM3
----		DEALLOCATE ITEM3
----		SET @CNT=0

----		FETCH NEXT FROM ITEM2 INTO @QTY,@WARE_NM,@TRAN_CD,@BOMID,@IT_CODE1,@BATCHNO
----	END
----	CLOSE ITEM2
----	DEALLOCATE ITEM2

----	SELECT IT_CODE,sum(REQTY-QTY)AS QTY,WARE_NM FROM #ITEM1 GROUP BY IT_CODE,WARE_NM
END


